#include "../universal_hashing.h"

#include "fields.hpp"
#include "randomness.h"

#include <boost/test/unit_test.hpp>
#include <boost/test/data/test_case.hpp>
#include <array>
#include <vector>

namespace {
  static constexpr size_t xs        = 8;
  static constexpr unsigned int ell = 32;
} // namespace

BOOST_AUTO_TEST_SUITE(universal_hashing)

BOOST_AUTO_TEST_CASE(test_vole_hash_128) {
  std::array<uint8_t, (5 * 128 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::vector<uint8_t> x;
  x.resize((ell + 128 + 128 + UNIVERSAL_HASH_B_BITS) / 8);
  rand_bytes(x.data(), x.size());

  std::array<uint8_t, (128 + UNIVERSAL_HASH_B_BITS) / 8> digest;
  vole_hash_128(digest.data(), sd.data(), x.data(), ell);
  BOOST_TEST(digest != decltype(digest){});
}

BOOST_AUTO_TEST_CASE(test_vole_hash_192) {
  std::array<uint8_t, (5 * 192 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::vector<uint8_t> x;
  x.resize((ell + 192 + 192 + UNIVERSAL_HASH_B_BITS) / 8);
  rand_bytes(x.data(), x.size());

  std::array<uint8_t, (192 + UNIVERSAL_HASH_B_BITS) / 8> digest;
  vole_hash_192(digest.data(), sd.data(), x.data(), ell);
  BOOST_TEST(digest != decltype(digest){});
}

BOOST_AUTO_TEST_CASE(test_vole_hash_256) {
  std::array<uint8_t, (5 * 256 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::vector<uint8_t> x;
  x.resize((ell + 256 + 256 + UNIVERSAL_HASH_B_BITS) / 8);
  rand_bytes(x.data(), x.size());

  std::array<uint8_t, (256 + UNIVERSAL_HASH_B_BITS) / 8> digest;
  vole_hash_256(digest.data(), sd.data(), x.data(), ell);
  BOOST_TEST(digest != decltype(digest){});
}

BOOST_AUTO_TEST_CASE(test_zk_hash_128) {
  std::array<uint8_t, (3 * 128 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::array<bf128_t, xs + 1> x;
  for (unsigned int i = 0; i != x.size(); ++i) {
    x[i] = bf128::random().as_internal();
  }

  std::array<uint8_t, 128 / 8> digest;
  zk_hash_128(digest.data(), sd.data(), x.data(), xs);
  BOOST_TEST(digest != decltype(digest){});
}

BOOST_AUTO_TEST_CASE(test_zk_hash_192) {
  std::array<uint8_t, (3 * 192 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::array<bf192_t, xs + 1> x;
  for (unsigned int i = 0; i != x.size(); ++i) {
    x[i] = bf192::random().as_internal();
  }

  std::array<uint8_t, 192 / 8> digest;
  zk_hash_192(digest.data(), sd.data(), x.data(), xs);
  BOOST_TEST(digest != decltype(digest){});
}

BOOST_AUTO_TEST_CASE(test_zk_hash_256) {
  std::array<uint8_t, (3 * 256 + 64) / 8> sd;
  rand_bytes(sd.data(), sd.size());

  std::array<bf256_t, xs + 1> x;
  for (unsigned int i = 0; i != x.size(); ++i) {
    x[i] = bf256::random().as_internal();
  }

  std::array<uint8_t, 256 / 8> digest;
  zk_hash_256(digest.data(), sd.data(), x.data(), xs);
  BOOST_TEST(digest != decltype(digest){});
}

namespace {
  static constexpr size_t TEST_VECTORS = 8;

  constexpr std::array<uint8_t, TEST_VECTORS * 5 * sizeof(bf128::bytes) + 8> vole_hash_128_sd{
      0x32, 0xf6, 0xdf, 0x50, 0x1f, 0x4b, 0x68, 0xd8, 0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f,
      0xc5, 0x6e, 0x04, 0x30, 0x3f, 0xa1, 0xe3, 0xe1, 0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd,
      0x4b, 0x39, 0x77, 0xbe, 0xa7, 0xfc, 0x26, 0x30, 0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39,
      0x88, 0x40, 0xda, 0x5b, 0x1d, 0xc7, 0xad, 0x07, 0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00,
      0x93, 0xa6, 0x8c, 0x45, 0x24, 0x0f, 0xb2, 0xda, 0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c,
      0x9f, 0xcd, 0x0c, 0xad, 0xe2, 0xda, 0xde, 0xfd, 0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f,
      0x84, 0xaa, 0x77, 0x87, 0x56, 0x5c, 0x65, 0x5a, 0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50,
      0x59, 0x73, 0x0d, 0x27, 0xac, 0x6e, 0xd3, 0x55, 0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32,
      0xca, 0x6e, 0x02, 0xea, 0x43, 0x9f, 0x75, 0x31, 0x81, 0x09, 0x3d, 0x72, 0xce, 0x36, 0x70,
      0xb3, 0xce, 0xed, 0x67, 0x72, 0xc7, 0x9a, 0x49, 0x56, 0xfa, 0x19, 0x13, 0xf7, 0x0e, 0xef,
      0xbc, 0xad, 0x78, 0x2d, 0x74, 0x1e, 0x3d, 0xb8, 0xed, 0x75, 0x8c, 0xb4, 0x24, 0xf4, 0x6b,
      0xa7, 0x07, 0x4d, 0x74, 0xa5, 0xcb, 0x9c, 0xab, 0x26, 0x05, 0x28, 0xb9, 0xdc, 0xa6, 0x8f,
      0x61, 0xae, 0xb9, 0x52, 0x42, 0xe5, 0xe3, 0x69, 0x59, 0x88, 0x26, 0x3c, 0x2f, 0x72, 0xad,
      0x0e, 0x82, 0x79, 0xb2, 0xac, 0x33, 0x16, 0x0e, 0xf5, 0xcd, 0x9c, 0xe5, 0x5f, 0xb5, 0xd9,
      0xe8, 0x67, 0x5f, 0xde, 0x03, 0xa0, 0x10, 0x33, 0xc5, 0x62, 0x26, 0x4f, 0x35, 0xf1, 0xe4,
      0xd1, 0x4c, 0x76, 0xb8, 0x02, 0x1e, 0xb4, 0xdb, 0x13, 0x14, 0xf9, 0x4a, 0xd7, 0xb3, 0x05,
      0xe7, 0x7c, 0xe9, 0x37, 0x75, 0x7b, 0xb1, 0x62, 0x54, 0x74, 0x4b, 0xca, 0xf6, 0x0c, 0x69,
      0xdf, 0x05, 0xff, 0xf4, 0x41, 0x49, 0xf6, 0xed, 0x35, 0xc3, 0x94, 0x7d, 0x66, 0x00, 0x7b,
      0xae, 0x20, 0x61, 0xef, 0x37, 0x1f, 0xa0, 0xf9, 0xf4, 0xa9, 0x44, 0xc8, 0x24, 0x32, 0xa8,
      0xa1, 0x84, 0x79, 0x03, 0xa3, 0x44, 0x7f, 0x78, 0x21, 0x5e, 0x63, 0x4a, 0x29, 0xf1, 0x84,
      0x4a, 0x38, 0xba, 0x59, 0x52, 0xb6, 0xf5, 0x45, 0xe3, 0xc7, 0x75, 0xe6, 0x9f, 0x5a, 0x4b,
      0xfc, 0x34, 0x63, 0xd3, 0x28, 0xaf, 0x50, 0xb1, 0x05, 0xc3, 0x14, 0x5f, 0x81, 0xfd, 0x4f,
      0x8b, 0x39, 0x92, 0x3c, 0x8f, 0xf2, 0x8c, 0xb9, 0x12, 0x1c, 0xe0, 0xc0, 0xb1, 0x14, 0x4f,
      0x55, 0xda, 0x7b, 0x78, 0x40, 0x8d, 0x32, 0x58, 0x19, 0x45, 0xb7, 0xf1, 0x4c, 0xbb, 0x3b,
      0x37, 0xea, 0x89, 0x0f, 0x0d, 0x91, 0xbb, 0xce, 0x4d, 0xa6, 0x32, 0x3e, 0x27, 0xdd, 0x2f,
      0x16, 0x87, 0x05, 0xa1, 0x47, 0x28, 0xc2, 0x53, 0x83, 0x71, 0xae, 0xe8, 0x49, 0xec, 0x08,
      0x6c, 0xe8, 0x1a, 0x8b, 0x4e, 0x5c, 0x3b, 0x7d, 0xa6, 0xc9, 0xbc, 0x35, 0xb3, 0x24, 0x6d,
      0x88, 0x6b, 0x95, 0xe2, 0xa9, 0xcb, 0xa9, 0x04, 0x06, 0x93, 0xd9, 0xad, 0x40, 0xc9, 0x13,
      0x70, 0xdb, 0xe4, 0xc8, 0xca, 0xa3, 0x87, 0xcf, 0x86, 0x23, 0xb0, 0xec, 0x05, 0x2a, 0x25,
      0x35, 0x5f, 0xc5, 0x23, 0x1d, 0x02, 0xdd, 0x54, 0xd7, 0x2c, 0xf0, 0xed, 0x6f, 0x32, 0xf6,
      0xdf, 0x50, 0x1f, 0x4b, 0x68, 0xd8, 0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f, 0xc5, 0x6e,
      0x04, 0x30, 0x3f, 0xa1, 0xe3, 0xe1, 0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd, 0x4b, 0x39,
      0x77, 0xbe, 0xa7, 0xfc, 0x26, 0x30, 0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39, 0x88, 0x40,
      0xda, 0x5b, 0x1d, 0xc7, 0xad, 0x07, 0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00, 0x93, 0xa6,
      0x8c, 0x45, 0x24, 0x0f, 0xb2, 0xda, 0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c, 0x9f, 0xcd,
      0x0c, 0xad, 0xe2, 0xda, 0xde, 0xfd, 0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f, 0x84, 0xaa,
      0x77, 0x87, 0x56, 0x5c, 0x65, 0x5a, 0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50, 0x59, 0x73,
      0x0d, 0x27, 0xac, 0x6e, 0xd3, 0x55, 0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32, 0xca, 0x6e,
      0x02, 0xea, 0x43, 0x9f, 0x75, 0x31, 0x81, 0x09, 0x3d, 0x72, 0xce, 0x36, 0x70, 0xb3, 0xce,
      0xed, 0x67, 0x72, 0xc7, 0x9a, 0x49, 0x56, 0xfa, 0x19, 0x13, 0xf7, 0x0e, 0xef, 0xbc, 0xad,
      0x78, 0x2d, 0x74, 0x1e, 0x3d, 0xb8, 0xed, 0x75, 0x8c, 0xb4, 0x24, 0xf4, 0x6b, 0xa7, 0x07,
      0x4d, 0x74, 0xa5, 0xcb, 0x9c, 0xab, 0x26, 0x05, 0x28, 0xb9, 0xdc, 0xa6, 0x8f, 0x61, 0xae,
      0xb9, 0x52, 0x42, 0xe5, 0xe3, 0x69, 0x59, 0x88, 0x26, 0x3c, 0x2f, 0x72, 0xad, 0x0e, 0x82,
      0x79, 0xb2, 0xac,
  };
  constexpr std::array<uint8_t,
                       TEST_VECTORS*(sizeof(bf128::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B)>
      vole_hash_128_xs{
          0xff, 0x1c, 0xdb, 0xcf, 0xc7, 0xc5, 0xa0, 0xca, 0x20, 0x0a, 0x44, 0x5b, 0x9a, 0xa7, 0x06,
          0x02, 0x46, 0x4e, 0x1a, 0xad, 0xaa, 0x6b, 0xc5, 0xde, 0x79, 0x5f, 0xdd, 0x66, 0x7a, 0x6e,
          0xf5, 0x33, 0x19, 0xd9, 0x76, 0xb8, 0x7d, 0xcf, 0x9e, 0x00, 0x3d, 0x1f, 0x28, 0x9e, 0x3b,
          0x41, 0xf7, 0x71, 0x09, 0x0b, 0x52, 0x02, 0xa4, 0x41, 0x43, 0xcc, 0x94, 0xe5, 0x6c, 0x37,
          0xb3, 0xc4, 0x82, 0x6f, 0xcc, 0x70, 0x0d, 0x3d, 0x47, 0x07, 0x1c, 0x44, 0xd1, 0xe4, 0x70,
          0xe6, 0x85, 0x70, 0x68, 0x97, 0x11, 0xb0, 0x9a, 0x70, 0x6a, 0x19, 0x00, 0x47, 0x6e, 0x2f,
          0x8a, 0xbc, 0x02, 0xcd, 0x6a, 0x23, 0x98, 0x81, 0x66, 0x67, 0x9b, 0x29, 0x91, 0x45, 0xfc,
          0x30, 0x9f, 0x90, 0x77, 0xd7, 0xec, 0xe5, 0xaa, 0xdf, 0x57, 0xcb, 0x76, 0x1d, 0x81, 0x46,
          0x3a, 0x63, 0xa2, 0xca, 0xc6, 0x81, 0x42, 0x5e, 0x31, 0x66, 0xf2, 0xa4, 0x83, 0xd7, 0xfd,
          0x23, 0x5d, 0x8f, 0xa6, 0xbf, 0x9b, 0x81, 0x1b, 0xec, 0x01, 0x53, 0x84, 0xe3, 0x61, 0x48,
          0xaa, 0x09, 0xdc, 0xbf, 0x0b, 0xfd, 0xd4, 0x2e, 0x80, 0xd7, 0xb6, 0xb3, 0x00, 0xe8, 0x10,
          0xbd, 0x68, 0x52, 0x18, 0xd8, 0x1a, 0xa6, 0x7b, 0xa2, 0x23, 0x26, 0x72, 0xdd, 0xbf, 0x66,
          0xd9, 0x6e, 0x6d, 0x0d, 0x94, 0xd9, 0xe6, 0xe3, 0x12, 0xf3, 0x8f, 0xf9, 0x4a, 0xdf, 0xd5,
          0xc0, 0xb9, 0x6a, 0x4b, 0xce, 0xd1, 0x32, 0x2b, 0xd8, 0x9f, 0x81, 0x3b, 0x17, 0x85, 0x83,
          0x6c, 0x52, 0x40, 0x87, 0xbe, 0x02, 0xfa, 0xe8, 0xf3, 0x63, 0x40, 0xab, 0x55, 0xbe, 0xdd,
          0xb6, 0x36, 0x2a, 0x24, 0x1d, 0xbb, 0xa5, 0x42, 0xa9, 0x87, 0x71, 0xdc, 0x7f, 0xe8, 0xa2,
          0x88, 0x2f, 0xe2, 0x70, 0x1a, 0xd7, 0x11, 0xe7, 0xc7, 0x3c, 0xbb, 0x37, 0x84, 0x4d, 0x50,
          0xd6, 0xc7, 0x15, 0xe6, 0x8e, 0xa7, 0xa1, 0xcf, 0xab, 0xe4, 0x39, 0x96, 0x58, 0x05, 0x9a,
          0xda, 0xd7, 0x6e, 0xd8, 0x7f, 0xd5, 0xbe, 0xc6, 0x6c, 0x0c, 0x16, 0x0d, 0x6f, 0xd3, 0x4a,
          0x23, 0x0d, 0xac, 0x98, 0x92, 0xfa, 0xc1, 0x75, 0x39, 0x1f, 0x6c, 0xe9, 0x05, 0xaa, 0x49,
          0x00, 0x02, 0x86, 0xd8,
      };
  constexpr std::array<uint8_t, TEST_VECTORS*(sizeof(bf128::bytes) + UNIVERSAL_HASH_B)>
      vole_hash_128_digest{
          0x83, 0xa5, 0xe8, 0x7f, 0x27, 0x07, 0x44, 0x50, 0xb7, 0x39, 0x03, 0xaf, 0xf7, 0x47, 0x3e,
          0x71, 0x8e, 0x50, 0x2b, 0xbf, 0x4c, 0xb9, 0x17, 0x6f, 0xc5, 0xec, 0xe1, 0x9c, 0x3e, 0xf3,
          0x09, 0x0b, 0x1a, 0x8a, 0xe2, 0xfb, 0x0f, 0x90, 0x12, 0x53, 0x2c, 0x7e, 0x35, 0xee, 0xa0,
          0x9b, 0x31, 0x7a, 0xb5, 0xa7, 0xfa, 0x50, 0xc0, 0x8d, 0xa5, 0x6e, 0xbb, 0xcf, 0x3c, 0x1e,
          0xda, 0xc1, 0x9a, 0xce, 0xe6, 0xbe, 0xe7, 0x8b, 0xfc, 0xcb, 0x85, 0xb9, 0x6f, 0x98, 0xea,
          0x2c, 0x06, 0x16, 0xc5, 0xca, 0x45, 0x70, 0x64, 0xf6, 0x00, 0x1b, 0x91, 0x38, 0xbd, 0xa9,
          0x69, 0xb7, 0x86, 0xf0, 0x63, 0xff, 0xc3, 0x8f, 0x16, 0x73, 0xfc, 0x0e, 0x05, 0x81, 0x1f,
          0xf8, 0x41, 0x38, 0x05, 0x77, 0x34, 0x83, 0x9f, 0x1d, 0xea, 0x5d, 0xb6, 0x0a, 0x8b, 0xaf,
          0x05, 0x3f, 0x18, 0xfe, 0xed, 0x29, 0x82, 0x88, 0xa7, 0x73, 0x59, 0xc8, 0x4f, 0x75, 0x08,
          0xab, 0x74, 0xbc, 0x05, 0x1d, 0x77, 0x18, 0xb7, 0x79,
      };

  constexpr std::array<uint8_t, TEST_VECTORS * 5 * sizeof(bf192::bytes) + 8> vole_hash_192_sd{
      0x32, 0xf6, 0xdf, 0x50, 0x1f, 0x4b, 0x68, 0xd8, 0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f,
      0xc5, 0x6e, 0x04, 0x30, 0x3f, 0xa1, 0xe3, 0xe1, 0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd,
      0x4b, 0x39, 0x77, 0xbe, 0xa7, 0xfc, 0x26, 0x30, 0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39,
      0x88, 0x40, 0xda, 0x5b, 0x1d, 0xc7, 0xad, 0x07, 0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00,
      0x93, 0xa6, 0x8c, 0x45, 0x24, 0x0f, 0xb2, 0xda, 0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c,
      0x9f, 0xcd, 0x0c, 0xad, 0xe2, 0xda, 0xde, 0xfd, 0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f,
      0x84, 0xaa, 0x77, 0x87, 0x56, 0x5c, 0x65, 0x5a, 0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50,
      0x59, 0x73, 0x0d, 0x27, 0xac, 0x6e, 0xd3, 0x55, 0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32,
      0xca, 0x6e, 0x02, 0xea, 0x43, 0x9f, 0x75, 0x31, 0xda, 0xe6, 0x92, 0x96, 0xdf, 0x9c, 0x44,
      0xbc, 0x33, 0x46, 0xb4, 0x02, 0xc4, 0x42, 0x67, 0x35, 0x03, 0xdf, 0xb1, 0x62, 0xfe, 0x70,
      0x13, 0xf9, 0x25, 0x56, 0x5c, 0xf3, 0xee, 0x0d, 0x4f, 0x97, 0x12, 0xe3, 0x0b, 0xc6, 0x60,
      0xfd, 0xe6, 0xc2, 0x92, 0x13, 0x9a, 0x0f, 0x99, 0xca, 0x98, 0xdc, 0xe5, 0xea, 0x3d, 0xb9,
      0x60, 0xd1, 0xb5, 0xf5, 0x85, 0xb5, 0xa1, 0x2e, 0xf7, 0x77, 0xc9, 0xae, 0x81, 0x09, 0x3d,
      0x72, 0xce, 0x36, 0x70, 0xb3, 0xce, 0xed, 0x67, 0x72, 0xc7, 0x9a, 0x49, 0x56, 0xfa, 0x19,
      0x13, 0xf7, 0x0e, 0xef, 0xbc, 0xad, 0x78, 0x2d, 0x74, 0x1e, 0x3d, 0xb8, 0xed, 0x75, 0x8c,
      0xb4, 0x24, 0xf4, 0x6b, 0xa7, 0x07, 0x4d, 0x74, 0xa5, 0xcb, 0x9c, 0xab, 0x26, 0x05, 0x28,
      0xb9, 0xdc, 0xa6, 0x8f, 0x61, 0xae, 0xb9, 0x52, 0x42, 0xe5, 0xe3, 0x69, 0x59, 0x88, 0x26,
      0x3c, 0x2f, 0x72, 0xad, 0x0e, 0x82, 0x79, 0xb2, 0xac, 0x33, 0x16, 0x0e, 0xf5, 0xcd, 0x9c,
      0xe5, 0x5f, 0xb5, 0xd9, 0xe8, 0x67, 0x5f, 0xde, 0x03, 0xa0, 0x10, 0x33, 0xc5, 0x62, 0x26,
      0x4f, 0x35, 0xf1, 0xe4, 0xd1, 0x4c, 0x76, 0xb8, 0x02, 0x1e, 0xb4, 0xdb, 0x13, 0x14, 0xf9,
      0x4a, 0xd7, 0xb3, 0x05, 0xe7, 0x7c, 0xe9, 0x37, 0x75, 0x7b, 0xb1, 0x62, 0x54, 0x74, 0x4b,
      0xca, 0xf6, 0x0c, 0x69, 0xdf, 0xda, 0xbb, 0x63, 0xd4, 0xfc, 0x04, 0x5d, 0x9d, 0x82, 0xef,
      0xdc, 0xf8, 0x92, 0x91, 0xed, 0xf6, 0xc9, 0xc0, 0x03, 0x91, 0x76, 0xf5, 0x58, 0x98, 0x37,
      0x9d, 0x2a, 0x3d, 0x9e, 0xd5, 0xe1, 0xfe, 0x3d, 0x39, 0xb4, 0x34, 0xb2, 0xa2, 0xa4, 0xf2,
      0x84, 0xd1, 0x5f, 0x41, 0x9a, 0x54, 0xe8, 0x64, 0x63, 0xca, 0xfd, 0xbf, 0x9e, 0x17, 0x54,
      0x37, 0x15, 0xe7, 0xd1, 0xd5, 0xcc, 0x74, 0x5a, 0x63, 0x05, 0xff, 0xf4, 0x41, 0x49, 0xf6,
      0xed, 0x35, 0xc3, 0x94, 0x7d, 0x66, 0x00, 0x7b, 0xae, 0x20, 0x61, 0xef, 0x37, 0x1f, 0xa0,
      0xf9, 0xf4, 0xa9, 0x44, 0xc8, 0x24, 0x32, 0xa8, 0xa1, 0x84, 0x79, 0x03, 0xa3, 0x44, 0x7f,
      0x78, 0x21, 0x5e, 0x63, 0x4a, 0x29, 0xf1, 0x84, 0x4a, 0x38, 0xba, 0x59, 0x52, 0xb6, 0xf5,
      0x45, 0xe3, 0xc7, 0x75, 0xe6, 0x9f, 0x5a, 0x4b, 0xfc, 0x34, 0x63, 0xd3, 0x28, 0xaf, 0x50,
      0xb1, 0x05, 0xc3, 0x14, 0x5f, 0x81, 0xfd, 0x4f, 0x8b, 0x39, 0x92, 0x3c, 0x8f, 0xf2, 0x8c,
      0xb9, 0x12, 0x1c, 0xe0, 0xc0, 0xb1, 0x14, 0x4f, 0x55, 0xda, 0x7b, 0x78, 0x40, 0x8d, 0x32,
      0x58, 0x19, 0x45, 0xb7, 0xf1, 0x4c, 0xbb, 0x3b, 0x37, 0xea, 0x89, 0x0f, 0x0d, 0x91, 0xbb,
      0xce, 0x4d, 0xa6, 0x32, 0x3e, 0x27, 0xdd, 0x2f, 0x16, 0x87, 0x05, 0xa1, 0x47, 0x28, 0xc2,
      0x53, 0x83, 0x97, 0x78, 0x39, 0x30, 0xda, 0x82, 0x35, 0xe0, 0x18, 0x6e, 0x3a, 0x44, 0xcb,
      0xb4, 0x1e, 0x78, 0x8c, 0x8f, 0x9f, 0xaa, 0x7f, 0x13, 0x8d, 0xfa, 0x67, 0x6e, 0x24, 0x79,
      0x18, 0xbc, 0xd9, 0x06, 0x77, 0xd0, 0x45, 0x97, 0x63, 0xe4, 0x3f, 0x2b, 0x4b, 0xa2, 0xb3,
      0x50, 0xd5, 0x50, 0x68, 0x87, 0x26, 0xff, 0xd0, 0x5f, 0xe8, 0xf6, 0x3e, 0x83, 0xbe, 0xe5,
      0x4a, 0x7b, 0xcc, 0x6e, 0x2c, 0xca, 0x71, 0xae, 0xe8, 0x49, 0xec, 0x08, 0x6c, 0xe8, 0x1a,
      0x8b, 0x4e, 0x5c, 0x3b, 0x7d, 0xa6, 0xc9, 0xbc, 0x35, 0xb3, 0x24, 0x6d, 0x88, 0x6b, 0x95,
      0xe2, 0xa9, 0xcb, 0xa9, 0x04, 0x06, 0x93, 0xd9, 0xad, 0x40, 0xc9, 0x13, 0x70, 0xdb, 0xe4,
      0xc8, 0xca, 0xa3, 0x87, 0xcf, 0x86, 0x23, 0xb0, 0xec, 0x05, 0x2a, 0x25, 0x35, 0x5f, 0xc5,
      0x23, 0x1d, 0x02, 0xdd, 0x54, 0xd7, 0x2c, 0xf0, 0xed, 0x6f, 0x32, 0xf6, 0xdf, 0x50, 0x1f,
      0x4b, 0x68, 0xd8, 0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f, 0xc5, 0x6e, 0x04, 0x30, 0x3f,
      0xa1, 0xe3, 0xe1, 0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd, 0x4b, 0x39, 0x77, 0xbe, 0xa7,
      0xfc, 0x26, 0x30, 0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39, 0x88, 0x40, 0xda, 0x5b, 0x1d,
      0xc7, 0xad, 0x07, 0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00, 0x93, 0xa6, 0x8c, 0x45, 0x24,
      0x0f, 0xb2, 0xda, 0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c, 0x9f, 0xcd, 0x0c, 0xad, 0xe2,
      0xda, 0xde, 0xfd, 0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f, 0x84, 0xaa, 0x77, 0x87, 0x56,
      0x5c, 0x65, 0x5a, 0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50, 0x59, 0x73, 0x0d, 0x27, 0xac,
      0x6e, 0xd3, 0x55, 0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32, 0xca, 0x6e, 0x02, 0xea, 0x43,
      0x9f, 0x75, 0x31, 0xda, 0xe6, 0x92, 0x96, 0xdf, 0x9c, 0x44, 0xbc, 0x33, 0x46, 0xb4, 0x02,
      0xc4, 0x42, 0x67, 0x35, 0x03, 0xdf, 0xb1, 0x62, 0xfe, 0x70, 0x13, 0xf9, 0x25, 0x56, 0x5c,
      0xf3, 0xee, 0x0d, 0x4f, 0x97, 0x12, 0xe3, 0x0b, 0xc6, 0x60, 0xfd, 0xe6, 0xc2, 0x92, 0x13,
      0x9a, 0x0f, 0x99, 0xca, 0x98, 0xdc, 0xe5, 0xea, 0x3d, 0xb9, 0x60, 0xd1, 0xb5, 0xf5, 0x85,
      0xb5, 0xa1, 0x2e, 0xf7, 0x77, 0xc9, 0xae, 0x81, 0x09, 0x3d, 0x72, 0xce, 0x36, 0x70, 0xb3,
      0xce, 0xed, 0x67, 0x72, 0xc7, 0x9a, 0x49, 0x56, 0xfa, 0x19, 0x13, 0xf7, 0x0e, 0xef, 0xbc,
      0xad, 0x78, 0x2d, 0x74, 0x1e, 0x3d, 0xb8, 0xed, 0x75, 0x8c, 0xb4, 0x24, 0xf4, 0x6b, 0xa7,
      0x07, 0x4d, 0x74, 0xa5, 0xcb, 0x9c, 0xab, 0x26, 0x05, 0x28, 0xb9, 0xdc, 0xa6, 0x8f, 0x61,
      0xae, 0xb9, 0x52, 0x42, 0xe5, 0xe3, 0x69, 0x59, 0x88, 0x26, 0x3c, 0x2f, 0x72, 0xad, 0x0e,
      0x82, 0x79, 0xb2, 0xac, 0x33, 0x16, 0x0e, 0xf5, 0xcd, 0x9c, 0xe5, 0x5f, 0xb5, 0xd9, 0xe8,
      0x67, 0x5f, 0xde, 0x03, 0xa0, 0x10, 0x33, 0xc5, 0x62, 0x26, 0x4f, 0x35, 0xf1, 0xe4, 0xd1,
      0x4c, 0x76, 0xb8, 0x02, 0x1e, 0xb4, 0xdb, 0x13, 0x14, 0xf9, 0x4a, 0xd7, 0xb3, 0x05, 0xe7,
      0x7c, 0xe9, 0x37, 0x75, 0x7b, 0xb1, 0x62, 0x54, 0x74, 0x4b, 0xca, 0xf6, 0x0c, 0x69, 0xdf,
      0xda, 0xbb, 0x63, 0xd4, 0xfc, 0x04, 0x5d, 0x9d,
  };
  constexpr std::array<uint8_t,
                       TEST_VECTORS*(sizeof(bf192::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B)>
      vole_hash_192_xs{
          0xff, 0x1c, 0xdb, 0xcf, 0xc7, 0xc5, 0xa0, 0xca, 0x20, 0x0a, 0x44, 0x5b, 0x9a, 0xa7, 0x06,
          0x02, 0x46, 0x4e, 0x1a, 0xad, 0xaa, 0x6b, 0xc5, 0xde, 0x79, 0x5f, 0xdd, 0x66, 0x7a, 0x6e,
          0xf5, 0x33, 0x19, 0xd9, 0x76, 0xb8, 0x7d, 0xcf, 0x9e, 0x00, 0x3d, 0x1f, 0x28, 0x9e, 0x3b,
          0x41, 0xf7, 0x71, 0x09, 0x0b, 0x52, 0x02, 0xa4, 0x41, 0x43, 0xcc, 0x94, 0xe5, 0x6c, 0x37,
          0xb3, 0xc4, 0x82, 0x6f, 0xcc, 0x70, 0x0d, 0x3d, 0x47, 0x07, 0x1c, 0x44, 0xd1, 0xe4, 0x70,
          0xe6, 0x85, 0x70, 0x68, 0x97, 0x11, 0xb0, 0x9a, 0x70, 0x6a, 0x19, 0x00, 0x47, 0x6e, 0x2f,
          0x8a, 0xbc, 0x02, 0xcd, 0x6a, 0x23, 0x98, 0x81, 0x66, 0x67, 0x9b, 0x29, 0x91, 0x45, 0xfc,
          0x30, 0x9f, 0x90, 0x77, 0xd7, 0xec, 0xe5, 0xaa, 0xdf, 0x57, 0xcb, 0x76, 0x1d, 0x81, 0x46,
          0x3a, 0x63, 0xa2, 0xca, 0xc6, 0x81, 0x42, 0x5e, 0x31, 0x66, 0xf2, 0xa4, 0x83, 0xd7, 0xfd,
          0x23, 0x5d, 0x8f, 0xa6, 0xbf, 0x9b, 0x81, 0x1b, 0xec, 0x01, 0x53, 0x84, 0xe3, 0x61, 0x48,
          0xaa, 0x09, 0xdc, 0xbf, 0x0b, 0xfd, 0xd4, 0x2e, 0x80, 0xd7, 0xb6, 0xb3, 0x00, 0xe8, 0x10,
          0xbd, 0x68, 0x52, 0x18, 0xd8, 0x1a, 0xa6, 0x7b, 0xa2, 0x23, 0x26, 0x72, 0xdd, 0xbf, 0x66,
          0xd9, 0x6e, 0x6d, 0x0d, 0x94, 0xd9, 0xe6, 0xe3, 0x12, 0xf3, 0x8f, 0xf9, 0x4a, 0xdf, 0xd5,
          0xc0, 0xb9, 0x6a, 0x4b, 0xce, 0xd1, 0x32, 0x2b, 0xd8, 0x9f, 0x81, 0x3b, 0x17, 0x85, 0x83,
          0x6c, 0x52, 0x40, 0x87, 0xbe, 0x02, 0xfa, 0xe8, 0xf3, 0x63, 0x40, 0xab, 0x55, 0xbe, 0xdd,
          0xb6, 0x36, 0x2a, 0x24, 0x1d, 0xbb, 0xa5, 0x42, 0xa9, 0x87, 0x71, 0xdc, 0x7f, 0xe8, 0xa2,
          0x88, 0x2f, 0xe2, 0x70, 0x1a, 0xd7, 0x11, 0xe7, 0xc7, 0x3c, 0xbb, 0x37, 0x84, 0x4d, 0x50,
          0xd6, 0xc7, 0x15, 0xe6, 0x8e, 0xa7, 0xa1, 0xcf, 0xab, 0xe4, 0x39, 0x96, 0x58, 0x05, 0x9a,
          0xda, 0xd7, 0x6e, 0xd8, 0x7f, 0xd5, 0xbe, 0xc6, 0x6c, 0x0c, 0x16, 0x0d, 0x6f, 0xd3, 0x4a,
          0x23, 0x0d, 0xac, 0x98, 0x92, 0xfa, 0xc1, 0x75, 0x39, 0x1f, 0x6c, 0xe9, 0x05, 0xaa, 0x49,
          0x00, 0x02, 0x86, 0xd8, 0x9f, 0xdd, 0x0c, 0xb6, 0x23, 0xd4, 0xbf, 0xc5, 0xb0, 0x35, 0x2f,
          0x67, 0x78, 0xc3, 0xcb, 0x92, 0x12, 0x44, 0xd5, 0x11, 0xe0, 0x07, 0x2f, 0x23, 0x63, 0x48,
          0xdd, 0x1d, 0x08, 0x3f, 0xba, 0xf1, 0x6d, 0x0d, 0x2d, 0xc1, 0xfa, 0x70, 0xb3, 0xca, 0xad,
          0x67, 0xde, 0xfd, 0x1c, 0x4d, 0x48, 0x9e, 0x7f, 0x43, 0x36, 0xe3, 0x10, 0x2b, 0xb3, 0x6f,
          0x58, 0xcf, 0x1c, 0x67, 0xa6, 0xf4, 0x88, 0xa4, 0x76, 0x97, 0xc8, 0x9e, 0xcb, 0x29, 0xdf,
          0x87, 0x4d, 0x14, 0xad, 0x9d, 0x8d, 0x67, 0x21, 0xea, 0xca, 0x7b, 0x3f, 0xa6, 0x72, 0xbb,
          0x8b, 0x65, 0xae, 0xab, 0xa8, 0xb0, 0xc9, 0x23, 0x33, 0x4b, 0xf5, 0x85, 0xba, 0x78, 0x1c,
          0xa2, 0x05, 0x35, 0x5c, 0xa4, 0x5d, 0x1e, 0xb9, 0x9e, 0xdf, 0x43, 0x54, 0x9b, 0x56, 0xe1,
          0x6b, 0xa0, 0x6d, 0x94, 0xe7, 0xef, 0x71, 0x82, 0xf1, 0xe2, 0x59, 0x67,
      };
  constexpr std::array<uint8_t, TEST_VECTORS*(sizeof(bf192::bytes) + UNIVERSAL_HASH_B)>
      vole_hash_192_digest{
          0x03, 0xc1, 0x30, 0x74, 0x48, 0xbf, 0x9b, 0xdb, 0x64, 0xd4, 0x91, 0x95, 0xfd, 0x80, 0xaa,
          0x7f, 0x23, 0x7d, 0x48, 0xe9, 0x95, 0xe2, 0x7d, 0x37, 0xc4, 0x10, 0x2c, 0xc3, 0x65, 0x9d,
          0x7d, 0x00, 0xd0, 0xb7, 0xcd, 0x1c, 0xf8, 0xb0, 0xc0, 0x17, 0x2f, 0x35, 0x79, 0x9d, 0x14,
          0x09, 0xa9, 0x6f, 0xea, 0xaa, 0xf4, 0x94, 0x12, 0xa5, 0xa4, 0x70, 0x15, 0xca, 0xb4, 0xf6,
          0xb8, 0x7b, 0x40, 0x15, 0xd4, 0x26, 0x29, 0x10, 0x9a, 0xa1, 0xdd, 0x3e, 0xcb, 0x65, 0x5e,
          0x1e, 0x17, 0xad, 0x35, 0x8d, 0x7f, 0x9b, 0x89, 0xf8, 0x09, 0xff, 0xda, 0xe7, 0xa0, 0xf1,
          0x79, 0x30, 0x28, 0x54, 0x09, 0x8a, 0x19, 0x25, 0x35, 0x07, 0xd4, 0x9c, 0x0b, 0x2a, 0x19,
          0x46, 0xf5, 0x81, 0xd2, 0x51, 0x3f, 0xe7, 0x46, 0x7b, 0xd3, 0xba, 0xa3, 0x26, 0xec, 0xf6,
          0x12, 0x7c, 0x22, 0x21, 0x17, 0x44, 0x80, 0xfe, 0x99, 0xa8, 0xc0, 0x6c, 0x02, 0xe0, 0xe6,
          0x29, 0x6e, 0xe7, 0xe8, 0x0f, 0xb8, 0xaa, 0x6c, 0x79, 0x37, 0x99, 0x0f, 0xfe, 0x80, 0x08,
          0x30, 0x90, 0x54, 0x50, 0x1b, 0x17, 0xfc, 0xc0, 0x5a, 0x02, 0x0d, 0x89, 0xf4, 0x31, 0x03,
          0x75, 0xf7, 0x37, 0xba, 0x50, 0x29, 0x1f, 0x1f, 0x70, 0x72, 0xa0, 0x49, 0x98, 0x6d, 0x8b,
          0xa8, 0x8c, 0xfb, 0xfc, 0x5f, 0xe8, 0x61, 0x78, 0x7f, 0x85, 0xe8, 0x1c, 0xa7, 0x82, 0x17,
          0xb5, 0x6b, 0x5f, 0x5c, 0xac, 0xe0, 0xb7, 0x0e, 0xfc, 0xde, 0xc2, 0x2f, 0xbf,
      };

  constexpr std::array<uint8_t, TEST_VECTORS * 5 * sizeof(bf256::bytes) + 8> vole_hash_256_sd{
      0x32, 0xf6, 0xdf, 0x50, 0x1f, 0x4b, 0x68, 0xd8, 0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f,
      0xc5, 0x6e, 0x04, 0x30, 0x3f, 0xa1, 0xe3, 0xe1, 0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd,
      0x4b, 0x39, 0x77, 0xbe, 0xa7, 0xfc, 0x26, 0x30, 0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39,
      0x88, 0x40, 0xda, 0x5b, 0x1d, 0xc7, 0xad, 0x07, 0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00,
      0x93, 0xa6, 0x8c, 0x45, 0x24, 0x0f, 0xb2, 0xda, 0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c,
      0x9f, 0xcd, 0x0c, 0xad, 0xe2, 0xda, 0xde, 0xfd, 0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f,
      0x84, 0xaa, 0x77, 0x87, 0x56, 0x5c, 0x65, 0x5a, 0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50,
      0x59, 0x73, 0x0d, 0x27, 0xac, 0x6e, 0xd3, 0x55, 0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32,
      0xca, 0x6e, 0x02, 0xea, 0x43, 0x9f, 0x75, 0x31, 0xda, 0xe6, 0x92, 0x96, 0xdf, 0x9c, 0x44,
      0xbc, 0x33, 0x46, 0xb4, 0x02, 0xc4, 0x42, 0x67, 0x35, 0x03, 0xdf, 0xb1, 0x62, 0xfe, 0x70,
      0x13, 0xf9, 0x25, 0x56, 0x5c, 0xf3, 0xee, 0x0d, 0x4f, 0x97, 0x12, 0xe3, 0x0b, 0xc6, 0x60,
      0xfd, 0xe6, 0xc2, 0x92, 0x13, 0x9a, 0x0f, 0x99, 0xca, 0x98, 0xdc, 0xe5, 0xea, 0x3d, 0xb9,
      0x60, 0xd1, 0xb5, 0xf5, 0x85, 0xb5, 0xa1, 0x2e, 0xf7, 0x77, 0xc9, 0xae, 0x2e, 0x9a, 0x9a,
      0xd1, 0x97, 0xcf, 0xc8, 0xce, 0x7f, 0x25, 0xfd, 0x07, 0x07, 0x83, 0x93, 0x6d, 0xeb, 0xa5,
      0x6d, 0x28, 0x81, 0xff, 0xb8, 0xda, 0x6d, 0x3a, 0xc3, 0x0d, 0xc6, 0x4c, 0x8d, 0x96, 0xd7,
      0x41, 0xd8, 0x28, 0x4c, 0xc4, 0xdf, 0x48, 0x5c, 0xf2, 0x27, 0xdf, 0xfd, 0x1b, 0xb8, 0x64,
      0xaa, 0x02, 0xc8, 0xdd, 0x2a, 0xee, 0xb8, 0xd2, 0xe8, 0xf9, 0x67, 0x53, 0x53, 0x0e, 0xba,
      0xe3, 0x81, 0x09, 0x3d, 0x72, 0xce, 0x36, 0x70, 0xb3, 0xce, 0xed, 0x67, 0x72, 0xc7, 0x9a,
      0x49, 0x56, 0xfa, 0x19, 0x13, 0xf7, 0x0e, 0xef, 0xbc, 0xad, 0x78, 0x2d, 0x74, 0x1e, 0x3d,
      0xb8, 0xed, 0x75, 0x8c, 0xb4, 0x24, 0xf4, 0x6b, 0xa7, 0x07, 0x4d, 0x74, 0xa5, 0xcb, 0x9c,
      0xab, 0x26, 0x05, 0x28, 0xb9, 0xdc, 0xa6, 0x8f, 0x61, 0xae, 0xb9, 0x52, 0x42, 0xe5, 0xe3,
      0x69, 0x59, 0x88, 0x26, 0x3c, 0x2f, 0x72, 0xad, 0x0e, 0x82, 0x79, 0xb2, 0xac, 0x33, 0x16,
      0x0e, 0xf5, 0xcd, 0x9c, 0xe5, 0x5f, 0xb5, 0xd9, 0xe8, 0x67, 0x5f, 0xde, 0x03, 0xa0, 0x10,
      0x33, 0xc5, 0x62, 0x26, 0x4f, 0x35, 0xf1, 0xe4, 0xd1, 0x4c, 0x76, 0xb8, 0x02, 0x1e, 0xb4,
      0xdb, 0x13, 0x14, 0xf9, 0x4a, 0xd7, 0xb3, 0x05, 0xe7, 0x7c, 0xe9, 0x37, 0x75, 0x7b, 0xb1,
      0x62, 0x54, 0x74, 0x4b, 0xca, 0xf6, 0x0c, 0x69, 0xdf, 0xda, 0xbb, 0x63, 0xd4, 0xfc, 0x04,
      0x5d, 0x9d, 0x82, 0xef, 0xdc, 0xf8, 0x92, 0x91, 0xed, 0xf6, 0xc9, 0xc0, 0x03, 0x91, 0x76,
      0xf5, 0x58, 0x98, 0x37, 0x9d, 0x2a, 0x3d, 0x9e, 0xd5, 0xe1, 0xfe, 0x3d, 0x39, 0xb4, 0x34,
      0xb2, 0xa2, 0xa4, 0xf2, 0x84, 0xd1, 0x5f, 0x41, 0x9a, 0x54, 0xe8, 0x64, 0x63, 0xca, 0xfd,
      0xbf, 0x9e, 0x17, 0x54, 0x37, 0x15, 0xe7, 0xd1, 0xd5, 0xcc, 0x74, 0x5a, 0x63, 0x6c, 0xa4,
      0x74, 0xf0, 0xd8, 0xca, 0x68, 0x16, 0xab, 0xc0, 0xfa, 0x8f, 0x3c, 0x1f, 0x0c, 0x3c, 0xf3,
      0x5d, 0xe2, 0x63, 0x0a, 0xc3, 0x4d, 0x54, 0x7f, 0x6c, 0xf3, 0x64, 0x17, 0x1f, 0x1d, 0x22,
      0xd0, 0xee, 0x7c, 0x92, 0x2c, 0x65, 0x78, 0x7f, 0xa9, 0x9e, 0x25, 0x9b, 0xb5, 0xb2, 0xb3,
      0xb6, 0xd1, 0xe7, 0xfc, 0x5d, 0x76, 0x11, 0xeb, 0x49, 0x3a, 0x34, 0xed, 0xe4, 0x10, 0x2d,
      0x86, 0xd1, 0x05, 0xff, 0xf4, 0x41, 0x49, 0xf6, 0xed, 0x35, 0xc3, 0x94, 0x7d, 0x66, 0x00,
      0x7b, 0xae, 0x20, 0x61, 0xef, 0x37, 0x1f, 0xa0, 0xf9, 0xf4, 0xa9, 0x44, 0xc8, 0x24, 0x32,
      0xa8, 0xa1, 0x84, 0x79, 0x03, 0xa3, 0x44, 0x7f, 0x78, 0x21, 0x5e, 0x63, 0x4a, 0x29, 0xf1,
      0x84, 0x4a, 0x38, 0xba, 0x59, 0x52, 0xb6, 0xf5, 0x45, 0xe3, 0xc7, 0x75, 0xe6, 0x9f, 0x5a,
      0x4b, 0xfc, 0x34, 0x63, 0xd3, 0x28, 0xaf, 0x50, 0xb1, 0x05, 0xc3, 0x14, 0x5f, 0x81, 0xfd,
      0x4f, 0x8b, 0x39, 0x92, 0x3c, 0x8f, 0xf2, 0x8c, 0xb9, 0x12, 0x1c, 0xe0, 0xc0, 0xb1, 0x14,
      0x4f, 0x55, 0xda, 0x7b, 0x78, 0x40, 0x8d, 0x32, 0x58, 0x19, 0x45, 0xb7, 0xf1, 0x4c, 0xbb,
      0x3b, 0x37, 0xea, 0x89, 0x0f, 0x0d, 0x91, 0xbb, 0xce, 0x4d, 0xa6, 0x32, 0x3e, 0x27, 0xdd,
      0x2f, 0x16, 0x87, 0x05, 0xa1, 0x47, 0x28, 0xc2, 0x53, 0x83, 0x97, 0x78, 0x39, 0x30, 0xda,
      0x82, 0x35, 0xe0, 0x18, 0x6e, 0x3a, 0x44, 0xcb, 0xb4, 0x1e, 0x78, 0x8c, 0x8f, 0x9f, 0xaa,
      0x7f, 0x13, 0x8d, 0xfa, 0x67, 0x6e, 0x24, 0x79, 0x18, 0xbc, 0xd9, 0x06, 0x77, 0xd0, 0x45,
      0x97, 0x63, 0xe4, 0x3f, 0x2b, 0x4b, 0xa2, 0xb3, 0x50, 0xd5, 0x50, 0x68, 0x87, 0x26, 0xff,
      0xd0, 0x5f, 0xe8, 0xf6, 0x3e, 0x83, 0xbe, 0xe5, 0x4a, 0x7b, 0xcc, 0x6e, 0x2c, 0xca, 0xf4,
      0x28, 0x36, 0x8e, 0x6c, 0xcd, 0x91, 0xd5, 0xa8, 0x33, 0x74, 0x16, 0xe6, 0xd2, 0x6f, 0xc7,
      0xcd, 0x2b, 0x55, 0x89, 0xf0, 0x79, 0x95, 0xd1, 0x51, 0xbe, 0x68, 0xb1, 0x0d, 0x70, 0x36,
      0xfe, 0xec, 0xfb, 0x88, 0xb2, 0xdc, 0xd8, 0x75, 0x68, 0x42, 0x83, 0xd0, 0x76, 0x5a, 0xb6,
      0xc5, 0x02, 0x1c, 0xbf, 0x13, 0xa6, 0x00, 0x94, 0xaa, 0x7b, 0xde, 0x72, 0x94, 0x98, 0xe1,
      0xb9, 0xeb, 0x20, 0x71, 0xae, 0xe8, 0x49, 0xec, 0x08, 0x6c, 0xe8, 0x1a, 0x8b, 0x4e, 0x5c,
      0x3b, 0x7d, 0xa6, 0xc9, 0xbc, 0x35, 0xb3, 0x24, 0x6d, 0x88, 0x6b, 0x95, 0xe2, 0xa9, 0xcb,
      0xa9, 0x04, 0x06, 0x93, 0xd9, 0xad, 0x40, 0xc9, 0x13, 0x70, 0xdb, 0xe4, 0xc8, 0xca, 0xa3,
      0x87, 0xcf, 0x86, 0x23, 0xb0, 0xec, 0x05, 0x2a, 0x25, 0x35, 0x5f, 0xc5, 0x23, 0x1d, 0x02,
      0xdd, 0x54, 0xd7, 0x2c, 0xf0, 0xed, 0x6f, 0x32, 0xf6, 0xdf, 0x50, 0x1f, 0x4b, 0x68, 0xd8,
      0x9c, 0x7b, 0x23, 0xf4, 0x53, 0x90, 0x4f, 0xc5, 0x6e, 0x04, 0x30, 0x3f, 0xa1, 0xe3, 0xe1,
      0xbd, 0x45, 0xb4, 0xea, 0xff, 0xb7, 0xcd, 0x4b, 0x39, 0x77, 0xbe, 0xa7, 0xfc, 0x26, 0x30,
      0x1c, 0xfb, 0x24, 0xc0, 0x18, 0x67, 0x39, 0x88, 0x40, 0xda, 0x5b, 0x1d, 0xc7, 0xad, 0x07,
      0x69, 0xe5, 0x3d, 0x2f, 0xe9, 0xff, 0x00, 0x93, 0xa6, 0x8c, 0x45, 0x24, 0x0f, 0xb2, 0xda,
      0x77, 0x52, 0xe4, 0x97, 0xf0, 0x82, 0x7c, 0x9f, 0xcd, 0x0c, 0xad, 0xe2, 0xda, 0xde, 0xfd,
      0x3e, 0x3f, 0x0f, 0x23, 0x14, 0x0e, 0x9f, 0x84, 0xaa, 0x77, 0x87, 0x56, 0x5c, 0x65, 0x5a,
      0x0d, 0x1d, 0x3f, 0x65, 0x62, 0x36, 0x50, 0x59, 0x73, 0x0d, 0x27, 0xac, 0x6e, 0xd3, 0x55,
      0xe8, 0x35, 0xee, 0x46, 0x71, 0xac, 0x32, 0xca, 0x6e, 0x02, 0xea, 0x43, 0x9f, 0x75, 0x31,
      0xda, 0xe6, 0x92, 0x96, 0xdf, 0x9c, 0x44, 0xbc, 0x33, 0x46, 0xb4, 0x02, 0xc4, 0x42, 0x67,
      0x35, 0x03, 0xdf, 0xb1, 0x62, 0xfe, 0x70, 0x13, 0xf9, 0x25, 0x56, 0x5c, 0xf3, 0xee, 0x0d,
      0x4f, 0x97, 0x12, 0xe3, 0x0b, 0xc6, 0x60, 0xfd, 0xe6, 0xc2, 0x92, 0x13, 0x9a, 0x0f, 0x99,
      0xca, 0x98, 0xdc, 0xe5, 0xea, 0x3d, 0xb9, 0x60, 0xd1, 0xb5, 0xf5, 0x85, 0xb5, 0xa1, 0x2e,
      0xf7, 0x77, 0xc9, 0xae, 0x2e, 0x9a, 0x9a, 0xd1, 0x97, 0xcf, 0xc8, 0xce, 0x7f, 0x25, 0xfd,
      0x07, 0x07, 0x83, 0x93, 0x6d, 0xeb, 0xa5, 0x6d, 0x28, 0x81, 0xff, 0xb8, 0xda, 0x6d, 0x3a,
      0xc3, 0x0d, 0xc6, 0x4c, 0x8d, 0x96, 0xd7, 0x41, 0xd8, 0x28, 0x4c, 0xc4, 0xdf, 0x48, 0x5c,
      0xf2, 0x27, 0xdf, 0xfd, 0x1b, 0xb8, 0x64, 0xaa, 0x02, 0xc8, 0xdd, 0x2a, 0xee, 0xb8, 0xd2,
      0xe8, 0xf9, 0x67, 0x53, 0x53, 0x0e, 0xba, 0xe3, 0x81, 0x09, 0x3d, 0x72, 0xce, 0x36, 0x70,
      0xb3, 0xce, 0xed, 0x67, 0x72, 0xc7, 0x9a, 0x49, 0x56, 0xfa, 0x19, 0x13, 0xf7, 0x0e, 0xef,
      0xbc, 0xad, 0x78, 0x2d, 0x74, 0x1e, 0x3d, 0xb8, 0xed, 0x75, 0x8c, 0xb4, 0x24, 0xf4, 0x6b,
      0xa7, 0x07, 0x4d, 0x74, 0xa5, 0xcb, 0x9c, 0xab, 0x26, 0x05, 0x28, 0xb9, 0xdc, 0xa6, 0x8f,
      0x61, 0xae, 0xb9, 0x52, 0x42, 0xe5, 0xe3, 0x69, 0x59, 0x88, 0x26, 0x3c, 0x2f, 0x72, 0xad,
      0x0e, 0x82, 0x79, 0xb2, 0xac, 0x33, 0x16, 0x0e, 0xf5, 0xcd, 0x9c, 0xe5, 0x5f, 0xb5, 0xd9,
      0xe8, 0x67, 0x5f, 0xde, 0x03, 0xa0, 0x10, 0x33, 0xc5, 0x62, 0x26, 0x4f, 0x35, 0xf1, 0xe4,
      0xd1, 0x4c, 0x76, 0xb8, 0x02, 0x1e, 0xb4, 0xdb, 0x13, 0x14, 0xf9, 0x4a, 0xd7, 0xb3, 0x05,
      0xe7, 0x7c, 0xe9, 0x37, 0x75, 0x7b, 0xb1, 0x62, 0x54, 0x74, 0x4b, 0xca, 0xf6, 0x0c, 0x69,
      0xdf, 0xda, 0xbb, 0x63, 0xd4, 0xfc, 0x04, 0x5d, 0x9d, 0x82, 0xef, 0xdc, 0xf8, 0x92, 0x91,
      0xed, 0xf6, 0xc9, 0xc0, 0x03, 0x91, 0x76, 0xf5, 0x58, 0x98, 0x37, 0x9d, 0x2a, 0x3d, 0x9e,
      0xd5, 0xe1, 0xfe, 0x3d, 0x39, 0xb4, 0x34, 0xb2, 0xa2, 0xa4, 0xf2, 0x84, 0xd1, 0x5f, 0x41,
      0x9a, 0x54, 0xe8, 0x64, 0x63, 0xca, 0xfd, 0xbf, 0x9e, 0x17, 0x54, 0x37, 0x15, 0xe7, 0xd1,
      0xd5, 0xcc, 0x74, 0x5a, 0x63, 0x6c, 0xa4, 0x74, 0xf0, 0xd8, 0xca, 0x68, 0x16,
  };
  constexpr std::array<uint8_t,
                       TEST_VECTORS*(sizeof(bf256::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B)>
      vole_hash_256_xs{
          0xff, 0x1c, 0xdb, 0xcf, 0xc7, 0xc5, 0xa0, 0xca, 0x20, 0x0a, 0x44, 0x5b, 0x9a, 0xa7, 0x06,
          0x02, 0x46, 0x4e, 0x1a, 0xad, 0xaa, 0x6b, 0xc5, 0xde, 0x79, 0x5f, 0xdd, 0x66, 0x7a, 0x6e,
          0xf5, 0x33, 0x19, 0xd9, 0x76, 0xb8, 0x7d, 0xcf, 0x9e, 0x00, 0x3d, 0x1f, 0x28, 0x9e, 0x3b,
          0x41, 0xf7, 0x71, 0x09, 0x0b, 0x52, 0x02, 0xa4, 0x41, 0x43, 0xcc, 0x94, 0xe5, 0x6c, 0x37,
          0xb3, 0xc4, 0x82, 0x6f, 0xcc, 0x70, 0x0d, 0x3d, 0x47, 0x07, 0x1c, 0x44, 0xd1, 0xe4, 0x70,
          0xe6, 0x85, 0x70, 0x68, 0x97, 0x11, 0xb0, 0x9a, 0x70, 0x6a, 0x19, 0x00, 0x47, 0x6e, 0x2f,
          0x8a, 0xbc, 0x02, 0xcd, 0x6a, 0x23, 0x98, 0x81, 0x66, 0x67, 0x9b, 0x29, 0x91, 0x45, 0xfc,
          0x30, 0x9f, 0x90, 0x77, 0xd7, 0xec, 0xe5, 0xaa, 0xdf, 0x57, 0xcb, 0x76, 0x1d, 0x81, 0x46,
          0x3a, 0x63, 0xa2, 0xca, 0xc6, 0x81, 0x42, 0x5e, 0x31, 0x66, 0xf2, 0xa4, 0x83, 0xd7, 0xfd,
          0x23, 0x5d, 0x8f, 0xa6, 0xbf, 0x9b, 0x81, 0x1b, 0xec, 0x01, 0x53, 0x84, 0xe3, 0x61, 0x48,
          0xaa, 0x09, 0xdc, 0xbf, 0x0b, 0xfd, 0xd4, 0x2e, 0x80, 0xd7, 0xb6, 0xb3, 0x00, 0xe8, 0x10,
          0xbd, 0x68, 0x52, 0x18, 0xd8, 0x1a, 0xa6, 0x7b, 0xa2, 0x23, 0x26, 0x72, 0xdd, 0xbf, 0x66,
          0xd9, 0x6e, 0x6d, 0x0d, 0x94, 0xd9, 0xe6, 0xe3, 0x12, 0xf3, 0x8f, 0xf9, 0x4a, 0xdf, 0xd5,
          0xc0, 0xb9, 0x6a, 0x4b, 0xce, 0xd1, 0x32, 0x2b, 0xd8, 0x9f, 0x81, 0x3b, 0x17, 0x85, 0x83,
          0x6c, 0x52, 0x40, 0x87, 0xbe, 0x02, 0xfa, 0xe8, 0xf3, 0x63, 0x40, 0xab, 0x55, 0xbe, 0xdd,
          0xb6, 0x36, 0x2a, 0x24, 0x1d, 0xbb, 0xa5, 0x42, 0xa9, 0x87, 0x71, 0xdc, 0x7f, 0xe8, 0xa2,
          0x88, 0x2f, 0xe2, 0x70, 0x1a, 0xd7, 0x11, 0xe7, 0xc7, 0x3c, 0xbb, 0x37, 0x84, 0x4d, 0x50,
          0xd6, 0xc7, 0x15, 0xe6, 0x8e, 0xa7, 0xa1, 0xcf, 0xab, 0xe4, 0x39, 0x96, 0x58, 0x05, 0x9a,
          0xda, 0xd7, 0x6e, 0xd8, 0x7f, 0xd5, 0xbe, 0xc6, 0x6c, 0x0c, 0x16, 0x0d, 0x6f, 0xd3, 0x4a,
          0x23, 0x0d, 0xac, 0x98, 0x92, 0xfa, 0xc1, 0x75, 0x39, 0x1f, 0x6c, 0xe9, 0x05, 0xaa, 0x49,
          0x00, 0x02, 0x86, 0xd8, 0x9f, 0xdd, 0x0c, 0xb6, 0x23, 0xd4, 0xbf, 0xc5, 0xb0, 0x35, 0x2f,
          0x67, 0x78, 0xc3, 0xcb, 0x92, 0x12, 0x44, 0xd5, 0x11, 0xe0, 0x07, 0x2f, 0x23, 0x63, 0x48,
          0xdd, 0x1d, 0x08, 0x3f, 0xba, 0xf1, 0x6d, 0x0d, 0x2d, 0xc1, 0xfa, 0x70, 0xb3, 0xca, 0xad,
          0x67, 0xde, 0xfd, 0x1c, 0x4d, 0x48, 0x9e, 0x7f, 0x43, 0x36, 0xe3, 0x10, 0x2b, 0xb3, 0x6f,
          0x58, 0xcf, 0x1c, 0x67, 0xa6, 0xf4, 0x88, 0xa4, 0x76, 0x97, 0xc8, 0x9e, 0xcb, 0x29, 0xdf,
          0x87, 0x4d, 0x14, 0xad, 0x9d, 0x8d, 0x67, 0x21, 0xea, 0xca, 0x7b, 0x3f, 0xa6, 0x72, 0xbb,
          0x8b, 0x65, 0xae, 0xab, 0xa8, 0xb0, 0xc9, 0x23, 0x33, 0x4b, 0xf5, 0x85, 0xba, 0x78, 0x1c,
          0xa2, 0x05, 0x35, 0x5c, 0xa4, 0x5d, 0x1e, 0xb9, 0x9e, 0xdf, 0x43, 0x54, 0x9b, 0x56, 0xe1,
          0x6b, 0xa0, 0x6d, 0x94, 0xe7, 0xef, 0x71, 0x82, 0xf1, 0xe2, 0x59, 0x67, 0xaa, 0x09, 0xdc,
          0xbf, 0x0b, 0xfd, 0xd4, 0x2e, 0x80, 0xd7, 0xb6, 0xb3, 0x00, 0xe8, 0x10, 0xbd, 0x68, 0x52,
          0x18, 0xd8, 0x1a, 0xa6, 0x7b, 0xa2, 0x23, 0x26, 0x72, 0xdd, 0xbf, 0x66, 0xd9, 0x6e, 0x6d,
          0x0d, 0x94, 0xd9, 0xe6, 0xe3, 0x12, 0xf3, 0x8f, 0xf9, 0x4a, 0xdf, 0xd5, 0xc0, 0xb9, 0x6a,
          0x4b, 0xce, 0xd1, 0x32, 0x2b, 0xd8, 0x9f, 0x81, 0x3b, 0x17, 0x85, 0x83, 0x6c, 0x52, 0x40,
          0x87, 0xbe, 0x02, 0xfa, 0xe8, 0xf3, 0x63, 0x40, 0xab, 0x55, 0xbe, 0xdd, 0xb6, 0x36, 0x2a,
          0x24, 0x1d, 0xbb, 0xa5, 0x42, 0xa9, 0x87, 0x71, 0xdc, 0x7f, 0xe8, 0xa2, 0x88, 0x2f, 0xe2,
          0x70, 0x1a, 0xd7, 0x11, 0xe7, 0xc7, 0x3c, 0xbb, 0x37, 0x84, 0x4d, 0x50, 0xd6, 0xc7, 0x15,
          0xe6, 0x8e, 0xa7, 0xa1, 0xcf, 0xab, 0xe4, 0x39, 0x96, 0x58, 0x05, 0x9a, 0xda, 0xd7, 0x6e,
          0xd8, 0x7f, 0xd5, 0xbe, 0xc6,
      };
  constexpr std::array<uint8_t, TEST_VECTORS*(sizeof(bf256::bytes) + UNIVERSAL_HASH_B)>
      vole_hash_256_digest{
          0x10, 0xe9, 0x17, 0x04, 0x5d, 0x7e, 0x69, 0x96, 0xd8, 0x07, 0xe2, 0x98, 0x25, 0xc6, 0xd0,
          0xd7, 0x5c, 0x3b, 0x54, 0xc9, 0x64, 0x18, 0xaa, 0xce, 0x1d, 0x53, 0xea, 0xe1, 0x91, 0xb9,
          0xe7, 0x5c, 0x1a, 0xfc, 0xd8, 0xb4, 0xd3, 0x18, 0x16, 0x33, 0x80, 0xa4, 0x5a, 0x1b, 0x6c,
          0xfc, 0xb9, 0x98, 0xd6, 0x34, 0x47, 0x63, 0x6a, 0x23, 0xbf, 0x7f, 0x99, 0x71, 0x3b, 0xd8,
          0xca, 0xd4, 0xed, 0x5c, 0xa4, 0xd5, 0xcf, 0x84, 0xac, 0xd7, 0x33, 0x54, 0xda, 0xe7, 0x38,
          0x90, 0xa6, 0xdc, 0xb7, 0x1e, 0x4e, 0x61, 0xe2, 0xe7, 0xa5, 0x0b, 0xec, 0x8f, 0xae, 0x34,
          0x5c, 0xa1, 0xd4, 0xe9, 0x54, 0xe4, 0x92, 0x91, 0x4b, 0x44, 0xda, 0xac, 0xc1, 0x31, 0x08,
          0x83, 0x05, 0xd7, 0x62, 0xa9, 0x26, 0x41, 0x09, 0x7c, 0x73, 0xa9, 0xa2, 0x5e, 0x8f, 0x32,
          0xf4, 0x85, 0xb1, 0xe8, 0x1c, 0x9c, 0xaa, 0x53, 0xdb, 0xc7, 0xff, 0x69, 0x45, 0xb1, 0x67,
          0x7d, 0x29, 0x9e, 0x4f, 0xca, 0xff, 0x92, 0x7e, 0x7c, 0x9f, 0xdd, 0xf7, 0x17, 0x8e, 0x8e,
          0xaf, 0x42, 0x6f, 0x01, 0x77, 0x98, 0xef, 0x0a, 0x98, 0x51, 0x75, 0x7a, 0xf7, 0xea, 0x38,
          0x73, 0x6e, 0x62, 0x69, 0xe7, 0x12, 0x4e, 0xaf, 0x04, 0xad, 0x4a, 0x6d, 0x45, 0xb4, 0xac,
          0x8a, 0x9b, 0x3b, 0x02, 0xcb, 0x02, 0x0c, 0x81, 0x10, 0x08, 0x6b, 0x8d, 0x98, 0x60, 0xd3,
          0x58, 0x58, 0xe4, 0xa9, 0x56, 0x38, 0xdb, 0x09, 0x3d, 0x1b, 0xd6, 0x34, 0xb7, 0xc7, 0x2f,
          0xd6, 0x98, 0x9c, 0xc6, 0x62, 0xa0, 0xac, 0xe4, 0x5c, 0xb0, 0x7c, 0x5e, 0x06, 0xa8, 0x81,
          0x1a, 0x25, 0x2b, 0x8e, 0xcf, 0xfa, 0xde, 0xb8, 0xf9, 0x69, 0xd2, 0x8b, 0xb6, 0xd4, 0x9d,
          0x9e, 0x75, 0x24, 0xa9, 0x26, 0x5b, 0xce, 0xcf, 0xe2, 0x0a, 0x0a, 0x00, 0x14, 0xb8, 0x22,
          0x1a, 0x9f, 0x41, 0x2d, 0xd6, 0xa8, 0xb1, 0x54, 0x3d, 0xc2, 0x7d, 0x7d, 0x34, 0x96, 0x7e,
          0xa5, 0xc4,
      };

  constexpr std::array<uint8_t, TEST_VECTORS*(3 * sizeof(bf128::bytes) + sizeof(bf64::bytes))>
      zk_hash_128_sd{
          0xa8, 0x41, 0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26, 0x35, 0x61, 0x06, 0x26, 0xf1, 0x65,
          0x4b, 0x75, 0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e, 0x38, 0x4d, 0x37, 0x96, 0x2a, 0x77,
          0x4a, 0x4d, 0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37, 0x48, 0x68, 0x8a, 0x1b, 0x2a, 0x23,
          0x39, 0xeb, 0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda, 0xfe, 0xec, 0x36, 0x71, 0xf5, 0x24,
          0x85, 0x61, 0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd, 0xb7, 0xdb, 0xb0, 0x46, 0xc6, 0x90,
          0x8c, 0xd2, 0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0, 0x36, 0xcd, 0x6e, 0x82, 0x02, 0xbe,
          0x28, 0xac, 0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5, 0x38, 0x6b, 0x7f, 0x6b, 0xd9, 0x56,
          0x06, 0x00, 0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f, 0x18, 0xf2, 0xea, 0xf1, 0x51, 0x49,
          0xb3, 0x16, 0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59, 0x94, 0x6d, 0x4c, 0x12, 0x5e, 0xff, 0x05,
          0xf2, 0x75, 0x87, 0x36, 0x17, 0x71, 0x47, 0xc1, 0x5e, 0x42, 0x26, 0x37, 0xf6, 0x62, 0x0c,
          0xac, 0x27, 0x83, 0xb8, 0x7f, 0x64, 0x53, 0x70, 0xc7, 0x80, 0xbf, 0x23, 0xe3, 0x45, 0x35,
          0xb7, 0xbc, 0x6d, 0x66, 0xcd, 0x94, 0xdf, 0x61, 0xd9, 0xe0, 0xf5, 0x25, 0x26, 0x29, 0xe7,
          0x5e, 0x83, 0xc3, 0x99, 0x4b, 0x64, 0xea, 0x5c, 0x0e, 0x00, 0x6a, 0x40, 0xcb, 0x4b, 0x55,
          0xfb, 0x45, 0x90, 0x4a, 0xfd, 0x5a, 0xbb, 0x9e, 0x0b, 0x96, 0x63, 0x6b, 0xb1, 0x9f, 0x0d,
          0xd3, 0x9f, 0xe1, 0x0e, 0x73, 0x2e, 0xeb, 0x96, 0xc2, 0x7e, 0x78, 0xb3, 0x23, 0x6e, 0x20,
          0x10, 0x7a, 0x18, 0xcc, 0x69, 0xce, 0x50, 0xd0, 0x3e, 0xb7, 0x1e, 0x0e, 0x00, 0xd1, 0xd5,
          0xf1, 0xc7, 0xea, 0xe0, 0xd0, 0x3f, 0x91, 0x88, 0x34, 0x91, 0x16, 0xc7, 0x0d, 0x41, 0x5d,
          0xbd, 0xc0, 0x74, 0xf9, 0xf3, 0x8b, 0x65, 0xf9, 0x46, 0xe5, 0x4c, 0x97, 0xc3, 0x19, 0x46,
          0x7b, 0xa2, 0x5f, 0xc7, 0xe1, 0xd7, 0x5e, 0xa4, 0x12, 0x1f, 0x3d, 0x88, 0x6c, 0x24, 0xfa,
          0xf7, 0x7f, 0x88, 0x81, 0x94, 0xa9, 0x57, 0x2b, 0xa6, 0x83, 0x38, 0x32, 0x1e, 0x90, 0x87,
          0x87, 0x0c, 0xe1, 0x01, 0xf9, 0xaf, 0x39, 0x6f, 0x45, 0x12, 0x52, 0xa1, 0x50, 0x59, 0xa5,
          0xbb, 0xd2, 0x76, 0x87, 0xbb, 0xa8, 0x41, 0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26, 0x35,
          0x61, 0x06, 0x26, 0xf1, 0x65, 0x4b, 0x75, 0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e, 0x38,
          0x4d, 0x37, 0x96, 0x2a, 0x77, 0x4a, 0x4d, 0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37, 0x48,
          0x68, 0x8a, 0x1b, 0x2a, 0x23, 0x39, 0xeb, 0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda, 0xfe,
          0xec, 0x36, 0x71, 0xf5, 0x24, 0x85, 0x61, 0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd, 0xb7,
          0xdb, 0xb0, 0x46, 0xc6, 0x90, 0x8c, 0xd2, 0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0, 0x36,
          0xcd, 0x6e, 0x82, 0x02, 0xbe, 0x28, 0xac, 0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5, 0x38,
          0x6b, 0x7f, 0x6b, 0xd9, 0x56, 0x06, 0x00, 0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f, 0x18,
          0xf2, 0xea, 0xf1, 0x51, 0x49, 0xb3, 0x16, 0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59,
      };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf128::bytes) * (xs + 1)> zk_hash_128_xs{
      0xc1, 0x67, 0xcf, 0xc9, 0x01, 0xed, 0x55, 0x19, 0x81, 0xdb, 0x8e, 0x47, 0xec, 0x4a, 0x48,
      0xd7, 0x13, 0x25, 0x2e, 0x43, 0xc6, 0x11, 0x1e, 0x16, 0x58, 0xa0, 0x96, 0x5d, 0x97, 0xed,
      0xb5, 0x30, 0xbc, 0x22, 0xbd, 0x17, 0x0a, 0xb3, 0x99, 0x1f, 0x7a, 0xc2, 0x57, 0x12, 0x4d,
      0x3f, 0x98, 0xca, 0xae, 0x9a, 0x8a, 0x8b, 0x72, 0xbb, 0x74, 0x39, 0xf6, 0xa7, 0xf0, 0x0c,
      0xb0, 0x0c, 0xed, 0x72, 0xfa, 0x78, 0x51, 0x17, 0x46, 0xf8, 0xb1, 0x52, 0x0f, 0xd4, 0x74,
      0x7f, 0xac, 0xb5, 0x62, 0xc9, 0x23, 0x4e, 0x9a, 0xc4, 0x8d, 0xd0, 0x8c, 0x7a, 0x58, 0x35,
      0xdf, 0xe8, 0xd9, 0x40, 0x3e, 0xa7, 0xc3, 0x69, 0x08, 0x2d, 0x7c, 0xaf, 0x9e, 0x5e, 0xb5,
      0x80, 0xc9, 0xca, 0xae, 0xd7, 0x36, 0x2c, 0xe2, 0xb0, 0xdf, 0xcd, 0x9e, 0x58, 0x71, 0x8f,
      0xad, 0xa8, 0xa0, 0x2e, 0x3e, 0x09, 0x59, 0x32, 0xb4, 0xe6, 0x3a, 0x52, 0x87, 0x2b, 0x00,
      0xf6, 0xfd, 0x53, 0x58, 0xe4, 0xfe, 0xaf, 0x03, 0x1a, 0x2d, 0x5f, 0x13, 0x43, 0x05, 0xb7,
      0xd7, 0x54, 0xf5, 0xb5, 0x9e, 0xdd, 0xdf, 0x28, 0xb4, 0x54, 0x05, 0x6f, 0x8a, 0x97, 0x52,
      0xce, 0x2f, 0x09, 0xc9, 0xc1, 0x41, 0x56, 0x33, 0x72, 0xc0, 0x40, 0x5c, 0xce, 0x23, 0x24,
      0x17, 0x61, 0xb3, 0x61, 0x48, 0xad, 0x92, 0xcd, 0x4e, 0x73, 0xc1, 0x8c, 0x05, 0x29, 0xb5,
      0x04, 0xbd, 0xcb, 0x34, 0x0a, 0xc5, 0x9e, 0xc4, 0x15, 0x39, 0x24, 0x92, 0xdb, 0xbb, 0xe2,
      0x03, 0x7a, 0x44, 0x17, 0xd9, 0x4c, 0x7d, 0xed, 0x65, 0x47, 0x2b, 0x5b, 0x2e, 0xee, 0x01,
      0x51, 0xa8, 0x0f, 0xb0, 0xbb, 0x08, 0x5e, 0x30, 0x3a, 0x74, 0xf7, 0xe9, 0xaa, 0x18, 0x20,
      0x24, 0x86, 0x25, 0xc9, 0x69, 0xa3, 0x39, 0x63, 0x18, 0xae, 0x78, 0xe9, 0xd4, 0x93, 0x42,
      0x19, 0xd1, 0x21, 0x8d, 0x0f, 0x35, 0xff, 0x75, 0xfc, 0x77, 0xa3, 0x45, 0x7c, 0x70, 0x97,
      0xe1, 0x82, 0x52, 0xd5, 0x61, 0xd7, 0x57, 0x87, 0xc2, 0x73, 0xbf, 0x72, 0xce, 0x98, 0xf6,
      0xc3, 0x3e, 0x18, 0xf9, 0xfa, 0xbb, 0x78, 0xc7, 0x00, 0xb0, 0x9a, 0xef, 0x05, 0x80, 0x4f,
      0x55, 0x86, 0xf6, 0x6a, 0xca, 0xed, 0x1d, 0x77, 0xfb, 0xec, 0x5e, 0xc1, 0x56, 0x44, 0x8e,
      0x7f, 0x8c, 0xbb, 0x69, 0x2b, 0x2a, 0xb8, 0x01, 0x2d, 0xc2, 0x32, 0x0a, 0x54, 0x85, 0xc5,
      0xe0, 0x2d, 0x0f, 0x1f, 0x20, 0xaa, 0xfc, 0x4f, 0x11, 0xd9, 0x18, 0xf5, 0xb7, 0xe2, 0xaa,
      0x55, 0xac, 0x58, 0x69, 0xbe, 0xd2, 0x7b, 0x7d, 0xbb, 0x89, 0x5e, 0xf7, 0x8d, 0x12, 0x66,
      0x51, 0x9f, 0xb2, 0xca, 0x30, 0xb0, 0xc3, 0x9b, 0xbd, 0x20, 0x31, 0x8a, 0x14, 0x11, 0x0d,
      0x6d, 0x2e, 0x1e, 0x4b, 0x87, 0x26, 0xeb, 0x28, 0xef, 0xbd, 0xe0, 0x8e, 0x2c, 0x91, 0x3b,
      0x00, 0x44, 0xbf, 0x33, 0xab, 0xb0, 0xbe, 0x37, 0x77, 0x1b, 0x43, 0xde, 0xaf, 0x82, 0xb2,
      0x8e, 0x3f, 0xd1, 0x1c, 0x37, 0x50, 0x9d, 0x76, 0x56, 0x14, 0xea, 0x7d, 0xf7, 0x2f, 0xc7,
      0x9f, 0x97, 0xcb, 0x6c, 0xe4, 0x7b, 0x5e, 0x3b, 0x0d, 0xe7, 0x45, 0x72, 0x2d, 0x04, 0x70,
      0x50, 0xe9, 0x70, 0xf7, 0x22, 0x36, 0x83, 0xaa, 0x88, 0x48, 0xdd, 0x2b, 0xee, 0xd0, 0xba,
      0x8c, 0x7b, 0x41, 0x14, 0x4e, 0xce, 0xd4, 0x47, 0x2e, 0x9c, 0xaa, 0x8a, 0x12, 0x7d, 0xb4,
      0x25, 0x9d, 0x8c, 0x86, 0x26, 0x75, 0x64, 0x81, 0x48, 0x67, 0xbb, 0x7e, 0x62, 0x90, 0x01,
      0xbc, 0x01, 0x1a, 0xb6, 0x18, 0x53, 0x9b, 0xec, 0xdf, 0xa8, 0x85, 0xcd, 0xd2, 0x41, 0x33,
      0x20, 0x7a, 0xdd, 0x96, 0xab, 0xb0, 0x68, 0x41, 0x7b, 0xee, 0x5e, 0xd8, 0x0b, 0x8e, 0xa0,
      0x3d, 0xdc, 0x18, 0x62, 0xfa, 0x33, 0x76, 0x95, 0x04, 0x02, 0xda, 0x4e, 0x43, 0xe2, 0x93,
      0x3a, 0x4f, 0xe7, 0x01, 0x0c, 0x33, 0x94, 0x88, 0x9e, 0x87, 0xfd, 0xb1, 0x60, 0xaa, 0x1b,
      0x6c, 0x4f, 0xd4, 0x70, 0x42, 0x99, 0x17, 0xaa, 0xf0, 0x04, 0xd7, 0x73, 0xba, 0x87, 0x86,
      0x8b, 0x2a, 0x59, 0x81, 0x08, 0xaf, 0xcd, 0x99, 0xad, 0xa3, 0xf8, 0x53, 0xcb, 0x8c, 0xf6,
      0x5b, 0x02, 0x4b, 0x38, 0xc0, 0x35, 0xfb, 0xb8, 0xa8, 0x54, 0xba, 0x3c, 0x7d, 0x38, 0xe7,
      0xc3, 0x67, 0x0f, 0xe4, 0xef, 0x84, 0xc8, 0x0e, 0x1f, 0xd9, 0xf7, 0xd4, 0x9d, 0x5f, 0xb4,
      0xd7, 0xb5, 0x9a, 0x8a, 0x93, 0xfd, 0x97, 0xd0, 0x9e, 0xbb, 0xb9, 0x0d, 0x18, 0xbb, 0x71,
      0x2b, 0x64, 0xaf, 0x24, 0x9c, 0xb2, 0xfb, 0xc7, 0xa1, 0x1a, 0xc0, 0x65, 0x55, 0xbf, 0xf7,
      0xb5, 0xab, 0x4f, 0x7d, 0xd5, 0xc2, 0x84, 0x0d, 0x07, 0x73, 0x46, 0x80, 0xad, 0x50, 0x84,
      0x17, 0xb1, 0x20, 0x38, 0x09, 0xf1, 0xbf, 0xc6, 0xde, 0x25, 0x5f, 0xea, 0x09, 0x4b, 0x15,
      0x64, 0x75, 0x4c, 0xbe, 0x4b, 0x2e, 0xeb, 0x6f, 0x6e, 0xb7, 0x6f, 0xc1, 0xbf, 0x39, 0xa7,
      0xc1, 0x93, 0xf6, 0x89, 0x03, 0x07, 0xaa, 0xec, 0x0f, 0x36, 0x1c, 0x89, 0x51, 0x57, 0x37,
      0x31, 0x43, 0xa0, 0x80, 0x1e, 0x2b, 0x8b, 0x9c, 0xc6, 0xb3, 0xac, 0xd0, 0x8d, 0x32, 0x2e,
      0x56, 0x91, 0xf5, 0xc7, 0xcf, 0xf2, 0x29, 0xda, 0x7c, 0x1a, 0x98, 0x38, 0x3f, 0x1c, 0x7a,
      0x29, 0x7d, 0x8e, 0x0b, 0xc2, 0x0e, 0x69, 0x29, 0x46, 0x3c, 0xe5, 0xa6, 0x89, 0x04, 0x09,
      0xa7, 0x76, 0x57, 0xab, 0xa4, 0x80, 0x17, 0x50, 0x9c, 0x81, 0x59, 0xef, 0x9c, 0x09, 0x9c,
      0x88, 0x05, 0x5f, 0x3a, 0x62, 0x75, 0x50, 0x28, 0x98, 0x29, 0x2d, 0x99, 0x02, 0xa1, 0x1e,
      0xde, 0x95, 0x3b, 0x25, 0x4f, 0x05, 0xfe, 0xc5, 0xb0, 0x6f, 0x38, 0xeb, 0x48, 0x0a, 0xf5,
      0x15, 0x53, 0xf2, 0x44, 0x69, 0x74, 0x6f, 0x4c, 0xca, 0x99, 0x3c, 0x8a, 0x26, 0x09, 0x06,
      0xbf, 0xec, 0x69, 0x95, 0x32, 0xe9, 0xa6, 0x2b, 0xe7, 0x09, 0x4c, 0xba, 0xec, 0x61, 0xcf,
      0x50, 0x49, 0xe0, 0x78, 0x54, 0x18, 0x38, 0xa2, 0x1d, 0x85, 0xf6, 0xed, 0xcf, 0x5b, 0xa4,
      0xfe, 0xa2, 0x76, 0xeb, 0x3e, 0x0e, 0x04, 0xdd, 0x4a, 0x5f, 0xc5, 0x21, 0x64, 0x4b, 0x7f,
      0x33, 0x27, 0xd8, 0xbd, 0x97, 0x54, 0xed, 0xa9, 0xab, 0x3d, 0xc0, 0xbc, 0xf5, 0x23, 0xaf,
      0x76, 0x6c, 0x4e, 0xae, 0xfc, 0x8c, 0x97, 0x3b, 0x79, 0x01, 0x5e, 0xc1, 0xe6, 0x45, 0x1a,
      0x6c, 0x71, 0x33, 0xd0, 0x8d, 0x48, 0x8a, 0xa4, 0x15, 0x5f, 0xcb, 0x21, 0xf4, 0x65, 0xce,
      0x65, 0x55, 0xc1, 0x91, 0x74, 0x27, 0x0a, 0xf9, 0xa0, 0xc9, 0xb6, 0x2e, 0x1f, 0x26, 0x67,
      0x4f, 0xa5, 0x0b, 0xda, 0x54, 0xa7, 0xea, 0xc9, 0x03, 0x99, 0x9f, 0x3b, 0x79, 0xc2, 0xed,
      0xdc, 0xfa, 0x5d, 0x0e, 0x34, 0x20, 0xe3, 0x9f, 0x72, 0x29, 0xdd, 0x18, 0xcd, 0x08, 0x67,
      0xaa, 0xb8, 0xfb, 0x2f, 0x59, 0xb4, 0xbc, 0x81, 0x42, 0x66, 0xb5, 0x9c, 0x71, 0x73, 0xaf,
      0x95, 0xda, 0x3b, 0xec, 0xc3, 0x4b, 0xb6, 0x15, 0x02, 0x38, 0xaf, 0x1e, 0x43, 0x09, 0x64,
      0xc5, 0x04, 0xa0, 0x63, 0x05, 0xdb, 0x0c, 0xec, 0x86, 0xa5, 0x4b, 0x9d, 0x99, 0x02, 0x2a,
      0x54, 0x0c, 0xbd, 0xbe, 0x70, 0x94, 0x1f, 0x1c, 0x87, 0xb8, 0xd1, 0x74, 0xb6, 0x75, 0x47,
      0x39, 0xd2, 0x76, 0x71, 0x33, 0xea, 0x37, 0xdd, 0x66, 0xae, 0x2f, 0x11, 0xff, 0xea, 0xd5,
      0xf1, 0x1f, 0xe4, 0x45, 0xb2, 0xf4, 0x2c, 0x8a, 0x7d, 0x50, 0xb0, 0x77, 0x50, 0xe4, 0x46,
      0xc8, 0xc2, 0x2e, 0xf3, 0xc1, 0x67, 0xcf, 0xc9, 0x01, 0xed, 0x55, 0x19, 0x81, 0xdb, 0x8e,
      0x47, 0xec, 0x4a, 0x48, 0xd7, 0x13, 0x25, 0x2e, 0x43, 0xc6, 0x11, 0x1e, 0x16, 0x58, 0xa0,
      0x96, 0x5d, 0x97, 0xed, 0xb5, 0x30, 0xbc, 0x22, 0xbd, 0x17, 0x0a, 0xb3, 0x99, 0x1f, 0x7a,
      0xc2, 0x57, 0x12, 0x4d, 0x3f, 0x98, 0xca, 0xae, 0x9a, 0x8a, 0x8b, 0x72, 0xbb, 0x74, 0x39,
      0xf6, 0xa7, 0xf0, 0x0c, 0xb0, 0x0c, 0xed, 0x72, 0xfa, 0x78, 0x51, 0x17, 0x46, 0xf8, 0xb1,
      0x52, 0x0f, 0xd4, 0x74, 0x7f, 0xac, 0xb5, 0x62, 0xc9, 0x23, 0x4e, 0x9a, 0xc4, 0x8d, 0xd0,
      0x8c, 0x7a, 0x58, 0x35, 0xdf, 0xe8, 0xd9, 0x40, 0x3e, 0xa7, 0xc3, 0x69, 0x08, 0x2d, 0x7c,
      0xaf, 0x9e, 0x5e, 0xb5, 0x80, 0xc9, 0xca, 0xae, 0xd7, 0x36, 0x2c, 0xe2, 0xb0, 0xdf, 0xcd,
      0x9e, 0x58, 0x71, 0x8f, 0xad, 0xa8, 0xa0, 0x2e, 0x3e, 0x09, 0x59, 0x32,
  };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf128::bytes)> zk_hash_128_digest{
      0x42, 0xe9, 0xb5, 0x20, 0x9b, 0x2c, 0x3d, 0x2b, 0xe9, 0x50, 0x77, 0x01, 0x8b, 0x83, 0x9a,
      0x0a, 0x67, 0xac, 0xa8, 0x55, 0x5d, 0x53, 0xe0, 0x05, 0x78, 0x2f, 0x88, 0x40, 0xf2, 0x7b,
      0xa0, 0xdc, 0xa9, 0x39, 0x8f, 0x60, 0x74, 0xdc, 0x46, 0x45, 0x5e, 0xc7, 0x2b, 0x12, 0xe1,
      0xbd, 0x1f, 0x7c, 0x26, 0x70, 0xea, 0xdd, 0x06, 0x6d, 0x98, 0xfa, 0x20, 0xda, 0x65, 0x11,
      0x11, 0x38, 0xb3, 0x25, 0xaa, 0x0c, 0xb6, 0x7e, 0x07, 0x8e, 0xb6, 0x59, 0x54, 0x58, 0xe3,
      0xb6, 0xe1, 0x3e, 0x83, 0x24, 0x2a, 0x24, 0x5d, 0xba, 0x27, 0x44, 0x84, 0x34, 0xcf, 0xcd,
      0x72, 0x6d, 0x0a, 0xf8, 0x17, 0x9d, 0xcb, 0x22, 0xff, 0x65, 0xd4, 0x00, 0xaa, 0xa7, 0xce,
      0x11, 0x31, 0x68, 0xe4, 0x08, 0xb8, 0x3c, 0xb5, 0x1c, 0xa3, 0x18, 0x49, 0x3d, 0x95, 0xec,
      0x56, 0xda, 0x9f, 0xf5, 0x94, 0x4f, 0xd8, 0xa3,
  };

  constexpr std::array<uint8_t, TEST_VECTORS*(3 * sizeof(bf192::bytes) + sizeof(bf64::bytes))>
      zk_hash_192_sd{
          0xa8, 0x41, 0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26, 0x35, 0x61, 0x06, 0x26, 0xf1, 0x65,
          0x4b, 0x75, 0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e, 0x38, 0x4d, 0x37, 0x96, 0x2a, 0x77,
          0x4a, 0x4d, 0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37, 0x48, 0x68, 0x8a, 0x1b, 0x2a, 0x23,
          0x39, 0xeb, 0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda, 0xfe, 0xec, 0x36, 0x71, 0xf5, 0x24,
          0x85, 0x61, 0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd, 0xb7, 0xdb, 0xb0, 0x46, 0xc6, 0x90,
          0x8c, 0xd2, 0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0, 0x36, 0xcd, 0x6e, 0x82, 0x02, 0xbe,
          0x28, 0xac, 0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5, 0x38, 0x6b, 0x7f, 0x6b, 0xd9, 0x56,
          0x06, 0x00, 0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f, 0x18, 0xf2, 0xea, 0xf1, 0x51, 0x49,
          0xb3, 0x16, 0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59, 0x27, 0xc2, 0x91, 0x48, 0x0b, 0x04, 0x29,
          0x73, 0x37, 0xe6, 0x0e, 0x66, 0xdc, 0x4c, 0x64, 0x5c, 0x1a, 0xd1, 0x91, 0xaa, 0xa5, 0x11,
          0xa0, 0xbf, 0x03, 0x02, 0xc5, 0xc7, 0xc2, 0x38, 0x19, 0x18, 0x1d, 0xcc, 0x04, 0xb2, 0x51,
          0xf8, 0xe4, 0x2a, 0xc6, 0x6c, 0x93, 0x36, 0xcf, 0xfd, 0x30, 0x5a, 0x38, 0x56, 0x34, 0xe4,
          0x53, 0x0e, 0x2f, 0xfc, 0x68, 0x82, 0x1f, 0x83, 0x75, 0x03, 0x0f, 0xc9, 0x94, 0x6d, 0x4c,
          0x12, 0x5e, 0xff, 0x05, 0xf2, 0x75, 0x87, 0x36, 0x17, 0x71, 0x47, 0xc1, 0x5e, 0x42, 0x26,
          0x37, 0xf6, 0x62, 0x0c, 0xac, 0x27, 0x83, 0xb8, 0x7f, 0x64, 0x53, 0x70, 0xc7, 0x80, 0xbf,
          0x23, 0xe3, 0x45, 0x35, 0xb7, 0xbc, 0x6d, 0x66, 0xcd, 0x94, 0xdf, 0x61, 0xd9, 0xe0, 0xf5,
          0x25, 0x26, 0x29, 0xe7, 0x5e, 0x83, 0xc3, 0x99, 0x4b, 0x64, 0xea, 0x5c, 0x0e, 0x00, 0x6a,
          0x40, 0xcb, 0x4b, 0x55, 0xfb, 0x45, 0x90, 0x4a, 0xfd, 0x5a, 0xbb, 0x9e, 0x0b, 0x96, 0x63,
          0x6b, 0xb1, 0x9f, 0x0d, 0xd3, 0x9f, 0xe1, 0x0e, 0x73, 0x2e, 0xeb, 0x96, 0xc2, 0x7e, 0x78,
          0xb3, 0x23, 0x6e, 0x20, 0x10, 0x7a, 0x18, 0xcc, 0x69, 0xce, 0x50, 0xd0, 0x3e, 0xb7, 0x1e,
          0x0e, 0x00, 0xd1, 0xd5, 0xf1, 0xc7, 0xea, 0xe0, 0xd0, 0x3f, 0x91, 0x88, 0x34, 0x91, 0x16,
          0xc7, 0x0d, 0x41, 0x5d, 0xbd, 0x74, 0xcf, 0x61, 0xb5, 0xf7, 0x65, 0x0b, 0x4a, 0x25, 0x3b,
          0x36, 0x73, 0x03, 0x46, 0x85, 0x62, 0x2b, 0x7b, 0x14, 0x5d, 0xe8, 0x59, 0xed, 0x5c, 0x7d,
          0x45, 0x01, 0xe7, 0x09, 0x3e, 0x8b, 0x2a, 0x23, 0x8d, 0x5a, 0xf6, 0xa4, 0x75, 0x65, 0xf2,
          0x00, 0xcf, 0x46, 0xdf, 0x53, 0x5a, 0x58, 0x0b, 0x0f, 0x78, 0x5d, 0x23, 0xbf, 0x65, 0xd1,
          0xdd, 0x0e, 0xa0, 0x24, 0xb4, 0x7d, 0x4b, 0x58, 0x19, 0xc0, 0x74, 0xf9, 0xf3, 0x8b, 0x65,
          0xf9, 0x46, 0xe5, 0x4c, 0x97, 0xc3, 0x19, 0x46, 0x7b, 0xa2, 0x5f, 0xc7, 0xe1, 0xd7, 0x5e,
          0xa4, 0x12, 0x1f, 0x3d, 0x88, 0x6c, 0x24, 0xfa, 0xf7, 0x7f, 0x88, 0x81, 0x94, 0xa9, 0x57,
          0x2b, 0xa6, 0x83, 0x38, 0x32, 0x1e, 0x90, 0x87, 0x87, 0x0c, 0xe1, 0x01, 0xf9, 0xaf, 0x39,
          0x6f, 0x45, 0x12, 0x52, 0xa1, 0x50, 0x59, 0xa5, 0xbb, 0xd2, 0x76, 0x87, 0xbb, 0xa8, 0x41,
          0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26, 0x35, 0x61, 0x06, 0x26, 0xf1, 0x65, 0x4b, 0x75,
          0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e, 0x38, 0x4d, 0x37, 0x96, 0x2a, 0x77, 0x4a, 0x4d,
          0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37, 0x48, 0x68, 0x8a, 0x1b, 0x2a, 0x23, 0x39, 0xeb,
          0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda, 0xfe, 0xec, 0x36, 0x71, 0xf5, 0x24, 0x85, 0x61,
          0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd, 0xb7, 0xdb, 0xb0, 0x46, 0xc6, 0x90, 0x8c, 0xd2,
          0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0, 0x36, 0xcd, 0x6e, 0x82, 0x02, 0xbe, 0x28, 0xac,
          0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5, 0x38, 0x6b, 0x7f, 0x6b, 0xd9, 0x56, 0x06, 0x00,
          0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f, 0x18, 0xf2, 0xea, 0xf1, 0x51, 0x49, 0xb3, 0x16,
          0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59, 0x27, 0xc2, 0x91, 0x48, 0x0b, 0x04, 0x29, 0x73, 0x37,
          0xe6, 0x0e, 0x66, 0xdc, 0x4c, 0x64, 0x5c, 0x1a, 0xd1, 0x91, 0xaa, 0xa5, 0x11, 0xa0, 0xbf,
          0x03, 0x02, 0xc5, 0xc7, 0xc2, 0x38, 0x19, 0x18, 0x1d, 0xcc, 0x04, 0xb2, 0x51, 0xf8, 0xe4,
          0x2a, 0xc6, 0x6c, 0x93, 0x36, 0xcf, 0xfd, 0x30, 0x5a, 0x38, 0x56, 0x34, 0xe4, 0x53, 0x0e,
          0x2f, 0xfc, 0x68, 0x82, 0x1f, 0x83, 0x75, 0x03, 0x0f, 0xc9,
      };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf192::bytes) * (xs + 1)> zk_hash_192_xs{
      0xc1, 0x67, 0xcf, 0xc9, 0x01, 0xed, 0x55, 0x19, 0x81, 0xdb, 0x8e, 0x47, 0xec, 0x4a, 0x48,
      0xd7, 0x13, 0x25, 0x2e, 0x43, 0xc6, 0x11, 0x1e, 0x16, 0x58, 0xa0, 0x96, 0x5d, 0x97, 0xed,
      0xb5, 0x30, 0xbc, 0x22, 0xbd, 0x17, 0x0a, 0xb3, 0x99, 0x1f, 0x7a, 0xc2, 0x57, 0x12, 0x4d,
      0x3f, 0x98, 0xca, 0xae, 0x9a, 0x8a, 0x8b, 0x72, 0xbb, 0x74, 0x39, 0xf6, 0xa7, 0xf0, 0x0c,
      0xb0, 0x0c, 0xed, 0x72, 0xfa, 0x78, 0x51, 0x17, 0x46, 0xf8, 0xb1, 0x52, 0x0f, 0xd4, 0x74,
      0x7f, 0xac, 0xb5, 0x62, 0xc9, 0x23, 0x4e, 0x9a, 0xc4, 0x8d, 0xd0, 0x8c, 0x7a, 0x58, 0x35,
      0xdf, 0xe8, 0xd9, 0x40, 0x3e, 0xa7, 0xc3, 0x69, 0x08, 0x2d, 0x7c, 0xaf, 0x9e, 0x5e, 0xb5,
      0x80, 0xc9, 0xca, 0xae, 0xd7, 0x36, 0x2c, 0xe2, 0xb0, 0xdf, 0xcd, 0x9e, 0x58, 0x71, 0x8f,
      0xad, 0xa8, 0xa0, 0x2e, 0x3e, 0x09, 0x59, 0x32, 0xb4, 0xe6, 0x3a, 0x52, 0x87, 0x2b, 0x00,
      0xf6, 0xfd, 0x53, 0x58, 0xe4, 0xfe, 0xaf, 0x03, 0x1a, 0x2d, 0x5f, 0x13, 0x43, 0x05, 0xb7,
      0xd7, 0x54, 0xf5, 0xb5, 0x9e, 0xdd, 0xdf, 0x28, 0xb4, 0x54, 0x05, 0x6f, 0x8a, 0x97, 0x52,
      0xce, 0x2f, 0x09, 0xc9, 0xc1, 0x41, 0x56, 0x33, 0x72, 0xc0, 0x40, 0x5c, 0xce, 0x23, 0x24,
      0x17, 0x61, 0xb3, 0x61, 0x48, 0xad, 0x92, 0xcd, 0x4e, 0x73, 0xc1, 0x8c, 0x05, 0x29, 0xb5,
      0x04, 0xbd, 0xcb, 0x34, 0x0a, 0xc5, 0x9e, 0xc4, 0x15, 0x39, 0x24, 0x92, 0xdb, 0xbb, 0xe2,
      0x03, 0x7a, 0x44, 0x17, 0xd9, 0x4c, 0x7d, 0xed, 0x65, 0x47, 0x2b, 0x5b, 0x2e, 0xee, 0x01,
      0x51, 0xa8, 0x0f, 0xb0, 0xbb, 0x08, 0x5e, 0x30, 0x3a, 0x74, 0xf7, 0xe9, 0xaa, 0x18, 0x20,
      0x24, 0x86, 0x25, 0xc9, 0x69, 0xa3, 0x39, 0x63, 0x18, 0xae, 0x78, 0xe9, 0xd4, 0x93, 0x42,
      0x19, 0xd1, 0x21, 0x8d, 0x0f, 0x35, 0xff, 0x75, 0xfc, 0x77, 0xa3, 0x45, 0x7c, 0x70, 0x97,
      0xe1, 0x82, 0x52, 0xd5, 0x61, 0xd7, 0x57, 0x87, 0xc2, 0x73, 0xbf, 0x72, 0xce, 0x98, 0xf6,
      0xc3, 0x3e, 0x18, 0xf9, 0xfa, 0xbb, 0x78, 0xc7, 0x00, 0xb0, 0x9a, 0xef, 0x05, 0x80, 0x4f,
      0x55, 0x86, 0xf6, 0x6a, 0xca, 0xed, 0x1d, 0x77, 0xfb, 0xec, 0x5e, 0xc1, 0x56, 0x44, 0x8e,
      0x7f, 0x8c, 0xbb, 0x69, 0x2b, 0x2a, 0xb8, 0x01, 0x2d, 0xc2, 0x32, 0x0a, 0x54, 0x85, 0xc5,
      0xe0, 0x2d, 0x0f, 0x1f, 0x20, 0xaa, 0xfc, 0x4f, 0x11, 0xd9, 0x18, 0xf5, 0xb7, 0xe2, 0xaa,
      0x55, 0xac, 0x58, 0x69, 0xbe, 0xd2, 0x7b, 0x7d, 0xbb, 0x89, 0x5e, 0xf7, 0x8d, 0x12, 0x66,
      0x51, 0x9f, 0xb2, 0xca, 0x30, 0xb0, 0xc3, 0x9b, 0xbd, 0x20, 0x31, 0x8a, 0x14, 0x11, 0x0d,
      0x6d, 0x2e, 0x1e, 0x4b, 0x87, 0x26, 0xeb, 0x28, 0xef, 0xbd, 0xe0, 0x8e, 0x2c, 0x91, 0x3b,
      0x00, 0x44, 0xbf, 0x33, 0xab, 0xb0, 0xbe, 0x37, 0x77, 0x1b, 0x43, 0xde, 0xaf, 0x82, 0xb2,
      0x8e, 0x3f, 0xd1, 0x1c, 0x37, 0x50, 0x9d, 0x76, 0x56, 0x14, 0xea, 0x7d, 0xf7, 0x2f, 0xc7,
      0x9f, 0x97, 0xcb, 0x6c, 0xe4, 0x7b, 0x5e, 0x3b, 0x0d, 0xe7, 0x45, 0x72, 0x2d, 0x04, 0x70,
      0x50, 0xe9, 0x70, 0xf7, 0x22, 0x36, 0x83, 0xaa, 0x88, 0x48, 0xdd, 0x2b, 0xee, 0xd0, 0xba,
      0x8c, 0x7b, 0x41, 0x14, 0x4e, 0xce, 0xd4, 0x47, 0x2e, 0x9c, 0xaa, 0x8a, 0x12, 0x7d, 0xb4,
      0x25, 0x9d, 0x8c, 0x86, 0x26, 0x75, 0x64, 0x81, 0x48, 0x67, 0xbb, 0x7e, 0x62, 0x90, 0x01,
      0xbc, 0x01, 0x1a, 0xb6, 0x18, 0x53, 0x9b, 0xec, 0xdf, 0xa8, 0x85, 0xcd, 0xd2, 0x41, 0x33,
      0x20, 0x7a, 0xdd, 0x96, 0xab, 0xb0, 0x68, 0x41, 0x7b, 0xee, 0x5e, 0xd8, 0x0b, 0x8e, 0xa0,
      0x3d, 0xdc, 0x18, 0x62, 0xfa, 0x33, 0x76, 0x95, 0x04, 0x02, 0xda, 0x4e, 0x43, 0xe2, 0x93,
      0x3a, 0x4f, 0xe7, 0x01, 0x0c, 0x33, 0x94, 0x88, 0x9e, 0x87, 0xfd, 0xb1, 0x60, 0xaa, 0x1b,
      0x6c, 0x4f, 0xd4, 0x70, 0x42, 0x99, 0x17, 0xaa, 0xf0, 0x04, 0xd7, 0x73, 0xba, 0x87, 0x86,
      0x8b, 0x2a, 0x59, 0x81, 0x08, 0xaf, 0xcd, 0x99, 0xad, 0xa3, 0xf8, 0x53, 0xcb, 0x8c, 0xf6,
      0x5b, 0x02, 0x4b, 0x38, 0xc0, 0x35, 0xfb, 0xb8, 0xa8, 0x54, 0xba, 0x3c, 0x7d, 0x38, 0xe7,
      0xc3, 0x67, 0x0f, 0xe4, 0xef, 0x84, 0xc8, 0x0e, 0x1f, 0xd9, 0xf7, 0xd4, 0x9d, 0x5f, 0xb4,
      0xd7, 0xb5, 0x9a, 0x8a, 0x93, 0xfd, 0x97, 0xd0, 0x9e, 0xbb, 0xb9, 0x0d, 0x18, 0xbb, 0x71,
      0x2b, 0x64, 0xaf, 0x24, 0x9c, 0xb2, 0xfb, 0xc7, 0xa1, 0x1a, 0xc0, 0x65, 0x55, 0xbf, 0xf7,
      0xb5, 0xab, 0x4f, 0x7d, 0xd5, 0xc2, 0x84, 0x0d, 0x07, 0x73, 0x46, 0x80, 0xad, 0x50, 0x84,
      0x17, 0xb1, 0x20, 0x38, 0x09, 0xf1, 0xbf, 0xc6, 0xde, 0x25, 0x5f, 0xea, 0x09, 0x4b, 0x15,
      0x64, 0x75, 0x4c, 0xbe, 0x4b, 0x2e, 0xeb, 0x6f, 0x6e, 0xb7, 0x6f, 0xc1, 0xbf, 0x39, 0xa7,
      0xc1, 0x93, 0xf6, 0x89, 0x03, 0x07, 0xaa, 0xec, 0x0f, 0x36, 0x1c, 0x89, 0x51, 0x57, 0x37,
      0x31, 0x43, 0xa0, 0x80, 0x1e, 0x2b, 0x8b, 0x9c, 0xc6, 0xb3, 0xac, 0xd0, 0x8d, 0x32, 0x2e,
      0x56, 0x91, 0xf5, 0xc7, 0xcf, 0xf2, 0x29, 0xda, 0x7c, 0x1a, 0x98, 0x38, 0x3f, 0x1c, 0x7a,
      0x29, 0x7d, 0x8e, 0x0b, 0xc2, 0x0e, 0x69, 0x29, 0x46, 0x3c, 0xe5, 0xa6, 0x89, 0x04, 0x09,
      0xa7, 0x76, 0x57, 0xab, 0xa4, 0x80, 0x17, 0x50, 0x9c, 0x81, 0x59, 0xef, 0x9c, 0x09, 0x9c,
      0x88, 0x05, 0x5f, 0x3a, 0x62, 0x75, 0x50, 0x28, 0x98, 0x29, 0x2d, 0x99, 0x02, 0xa1, 0x1e,
      0xde, 0x95, 0x3b, 0x25, 0x4f, 0x05, 0xfe, 0xc5, 0xb0, 0x6f, 0x38, 0xeb, 0x48, 0x0a, 0xf5,
      0x15, 0x53, 0xf2, 0x44, 0x69, 0x74, 0x6f, 0x4c, 0xca, 0x99, 0x3c, 0x8a, 0x26, 0x09, 0x06,
      0xbf, 0xec, 0x69, 0x95, 0x32, 0xe9, 0xa6, 0x2b, 0xe7, 0x09, 0x4c, 0xba, 0xec, 0x61, 0xcf,
      0x50, 0x49, 0xe0, 0x78, 0x54, 0x18, 0x38, 0xa2, 0x1d, 0x85, 0xf6, 0xed, 0xcf, 0x5b, 0xa4,
      0xfe, 0xa2, 0x76, 0xeb, 0x3e, 0x0e, 0x04, 0xdd, 0x4a, 0x5f, 0xc5, 0x21, 0x64, 0x4b, 0x7f,
      0x33, 0x27, 0xd8, 0xbd, 0x97, 0x54, 0xed, 0xa9, 0xab, 0x3d, 0xc0, 0xbc, 0xf5, 0x23, 0xaf,
      0x76, 0x6c, 0x4e, 0xae, 0xfc, 0x8c, 0x97, 0x3b, 0x79, 0x01, 0x5e, 0xc1, 0xe6, 0x45, 0x1a,
      0x6c, 0x71, 0x33, 0xd0, 0x8d, 0x48, 0x8a, 0xa4, 0x15, 0x5f, 0xcb, 0x21, 0xf4, 0x65, 0xce,
      0x65, 0x55, 0xc1, 0x91, 0x74, 0x27, 0x0a, 0xf9, 0xa0, 0xc9, 0xb6, 0x2e, 0x1f, 0x26, 0x67,
      0x4f, 0xa5, 0x0b, 0xda, 0x54, 0xa7, 0xea, 0xc9, 0x03, 0x99, 0x9f, 0x3b, 0x79, 0xc2, 0xed,
      0xdc, 0xfa, 0x5d, 0x0e, 0x34, 0x20, 0xe3, 0x9f, 0x72, 0x29, 0xdd, 0x18, 0xcd, 0x08, 0x67,
      0xaa, 0xb8, 0xfb, 0x2f, 0x59, 0xb4, 0xbc, 0x81, 0x42, 0x66, 0xb5, 0x9c, 0x71, 0x73, 0xaf,
      0x95, 0xda, 0x3b, 0xec, 0xc3, 0x4b, 0xb6, 0x15, 0x02, 0x38, 0xaf, 0x1e, 0x43, 0x09, 0x64,
      0xc5, 0x04, 0xa0, 0x63, 0x05, 0xdb, 0x0c, 0xec, 0x86, 0xa5, 0x4b, 0x9d, 0x99, 0x02, 0x2a,
      0x54, 0x0c, 0xbd, 0xbe, 0x70, 0x94, 0x1f, 0x1c, 0x87, 0xb8, 0xd1, 0x74, 0xb6, 0x75, 0x47,
      0x39, 0xd2, 0x76, 0x71, 0x33, 0xea, 0x37, 0xdd, 0x66, 0xae, 0x2f, 0x11, 0xff, 0xea, 0xd5,
      0xf1, 0x1f, 0xe4, 0x45, 0xb2, 0xf4, 0x2c, 0x8a, 0x7d, 0x50, 0xb0, 0x77, 0x50, 0xe4, 0x46,
      0xc8, 0xc2, 0x2e, 0xf3, 0xc1, 0x3a, 0x9e, 0xeb, 0x44, 0x1f, 0xd6, 0xac, 0xe8, 0xf3, 0x5e,
      0x0f, 0x5e, 0x5d, 0x59, 0x99, 0x8c, 0x15, 0x54, 0x68, 0x3e, 0x98, 0x49, 0x0e, 0x32, 0x16,
      0x80, 0xfd, 0x14, 0x50, 0xc2, 0x8d, 0x0c, 0x62, 0xf1, 0x0c, 0x27, 0x52, 0xe1, 0x87, 0x53,
      0xb5, 0x33, 0xb3, 0x4b, 0x9e, 0xf6, 0x1f, 0xea, 0x0c, 0xba, 0xc0, 0xd3, 0xa6, 0x13, 0x48,
      0xf6, 0xa4, 0xc7, 0x1d, 0x44, 0x56, 0xbb, 0xd9, 0x78, 0xe0, 0x5e, 0xee, 0xd7, 0x8e, 0xa5,
      0xb5, 0x63, 0x23, 0xe9, 0x8a, 0x90, 0x9f, 0x72, 0xd6, 0xfc, 0xc2, 0xc8, 0x4b, 0x49, 0x89,
      0x09, 0xf7, 0xc5, 0x46, 0x47, 0x3b, 0xfe, 0xe0, 0xa6, 0x51, 0x58, 0x85, 0x7b, 0x49, 0x2f,
      0x44, 0x57, 0xe7, 0x19, 0x39, 0x96, 0xa5, 0x17, 0x8c, 0xf1, 0x72, 0x57, 0xed, 0xac, 0x69,
      0x11, 0x3e, 0x1f, 0xf2, 0xbb, 0x80, 0x4f, 0xad, 0xe9, 0xe9, 0x34, 0x75, 0x33, 0xf2, 0x1f,
      0x99, 0xa6, 0x04, 0x6c, 0xb7, 0x1e, 0x38, 0x1b, 0xb0, 0xad, 0x47, 0x43, 0x5a, 0x17, 0x91,
      0x46, 0xbd, 0xf1, 0x0b, 0x27, 0xab, 0x0d, 0x45, 0x9b, 0x7f, 0x13, 0xa3, 0x77, 0x9e, 0xdf,
      0x5e, 0x37, 0x7f, 0x19, 0xea, 0x10, 0xf8, 0xd7, 0x68, 0x5f, 0x14, 0x14, 0x76, 0xc7, 0xb8,
      0x71, 0x9b, 0x5a, 0x7f, 0xed, 0x34, 0xff, 0xbf, 0x19, 0xcf, 0xf9, 0xef, 0x85, 0x86, 0xa5,
      0x0b, 0x1a, 0xc0, 0x67, 0x09, 0x4b, 0x8b, 0xe8, 0x05, 0x65, 0xfc, 0x9e, 0x19, 0x1e, 0x8c,
      0xe3, 0xfd, 0x93, 0x73, 0x4f, 0x2a, 0x29, 0xd4, 0xba, 0x87, 0xaf, 0xd4, 0xf2, 0xf9, 0x67,
      0x8c, 0xd0, 0x0d, 0xcd, 0x64, 0xc7, 0x60, 0x4a, 0x2c, 0xb4, 0x96, 0xb7, 0xa5, 0x4d, 0x44,
      0x3e, 0x6b, 0xa9, 0x7f, 0x83, 0xc8, 0x37, 0x0d, 0xfa, 0x23, 0x14, 0xc3, 0x18, 0xaf, 0x0d,
      0xa8, 0xee, 0x84, 0x03, 0x24, 0xac, 0xfc, 0xc9, 0x2e, 0xa8, 0xcc, 0x53, 0x63, 0x97, 0xba,
      0xed, 0x68, 0x25, 0x85, 0x8e, 0xf5, 0x35, 0x55, 0xaa, 0x9e, 0x38, 0x93, 0xfd, 0x15, 0x31,
      0xc4, 0x9f, 0x48, 0xac, 0xa1, 0x7a, 0xa3, 0xf4, 0x1d, 0xac, 0xa8, 0x17, 0x91, 0x52, 0x5a,
      0x50, 0x0b, 0x9a, 0x3f, 0x96, 0xd7, 0x23, 0x6e, 0x37, 0xe1, 0xb9, 0xd6, 0xb3, 0xee, 0x25,
      0x50, 0x72, 0x08, 0x6d, 0xb3, 0x14, 0xb9, 0x4e, 0xa5, 0x80, 0x78, 0x99, 0x10, 0xc8, 0x4e,
      0x63, 0x10, 0xe1, 0xaf, 0x80, 0x12, 0x38, 0xbe, 0x49, 0x36, 0xdd, 0x6d, 0x35, 0xe8, 0x64,
      0xcf, 0x5c, 0xec, 0xdb, 0xcd, 0xb2, 0x75, 0x43, 0x44, 0x75, 0x90, 0x87, 0xbb, 0x3c, 0x08,
      0xe1, 0xb5, 0xbd, 0x7a, 0xc0, 0xd1, 0x2b, 0x53, 0x28, 0x4c, 0xb2, 0xf4, 0x7b, 0xaf, 0xbb,
      0xd2, 0xcd, 0xd7, 0x8b, 0xb4, 0xf7, 0x1a, 0x21, 0xa5, 0x75, 0x67, 0xa6, 0x91, 0xed, 0x2b,
      0xe7, 0x83, 0x35, 0x62, 0xf6, 0xff, 0x20, 0xd7, 0x06, 0xa2, 0x93, 0x85, 0x5a, 0xdb, 0x3f,
      0xd3, 0xc8, 0xe7, 0x35, 0xd5, 0xec, 0xd9, 0x64, 0x62, 0xa2, 0xbb, 0x64, 0xa9, 0xf4, 0xd4,
      0x2b, 0xd7, 0x20, 0x6b, 0x56, 0xba, 0xca, 0xc3, 0xe3, 0xc0, 0x34, 0x1c, 0xe3, 0xff, 0x0d,
      0xba, 0x0f, 0x25, 0x7a, 0xc6, 0x15, 0x38, 0xf6, 0x33, 0x3b, 0xfb, 0xef, 0xe2, 0xf0, 0x31,
      0xb9, 0xf9, 0x1f, 0xb7, 0x83, 0xd2, 0xe4, 0xee, 0xcc, 0x53, 0x09, 0xbf, 0x9d, 0x33, 0xa1,
      0x56, 0x0c, 0x4d, 0x7a, 0xf7, 0x53, 0x96, 0xb4, 0x98, 0x56, 0x93, 0x71, 0x8a, 0x84, 0x0a,
      0xea, 0xed, 0x98, 0x0c, 0xa0, 0xf3, 0x58, 0x21, 0xa1, 0x6c, 0xc7, 0x41, 0x31, 0xa0, 0x28,
      0xb7, 0x80, 0x79, 0xca, 0x8b, 0x46, 0x4b, 0x38, 0xf4, 0xb1, 0xd0, 0x02, 0x34, 0x74, 0x09,
      0xdd, 0xb3, 0x74, 0x91, 0x8b, 0x45, 0xc1, 0x67, 0xcf, 0xc9, 0x01, 0xed, 0x55, 0x19, 0x81,
      0xdb, 0x8e, 0x47, 0xec, 0x4a, 0x48, 0xd7, 0x13, 0x25, 0x2e, 0x43, 0xc6, 0x11, 0x1e, 0x16,
      0x58, 0xa0, 0x96, 0x5d, 0x97, 0xed, 0xb5, 0x30, 0xbc, 0x22, 0xbd, 0x17, 0x0a, 0xb3, 0x99,
      0x1f, 0x7a, 0xc2, 0x57, 0x12, 0x4d, 0x3f, 0x98, 0xca, 0xae, 0x9a, 0x8a, 0x8b, 0x72, 0xbb,
      0x74, 0x39, 0xf6, 0xa7, 0xf0, 0x0c, 0xb0, 0x0c, 0xed, 0x72, 0xfa, 0x78, 0x51, 0x17, 0x46,
      0xf8, 0xb1, 0x52, 0x0f, 0xd4, 0x74, 0x7f, 0xac, 0xb5, 0x62, 0xc9, 0x23, 0x4e, 0x9a, 0xc4,
      0x8d, 0xd0, 0x8c, 0x7a, 0x58, 0x35, 0xdf, 0xe8, 0xd9, 0x40, 0x3e, 0xa7, 0xc3, 0x69, 0x08,
      0x2d, 0x7c, 0xaf, 0x9e, 0x5e, 0xb5, 0x80, 0xc9, 0xca, 0xae, 0xd7, 0x36, 0x2c, 0xe2, 0xb0,
      0xdf, 0xcd, 0x9e, 0x58, 0x71, 0x8f, 0xad, 0xa8, 0xa0, 0x2e, 0x3e, 0x09, 0x59, 0x32, 0xb4,
      0xe6, 0x3a, 0x52, 0x87, 0x2b, 0x00, 0xf6, 0xfd, 0x53, 0x58, 0xe4, 0xfe, 0xaf, 0x03, 0x1a,
      0x2d, 0x5f, 0x13, 0x43, 0x05, 0xb7, 0xd7, 0x54, 0xf5, 0xb5, 0x9e, 0xdd, 0xdf, 0x28, 0xb4,
      0x54, 0x05, 0x6f, 0x8a, 0x97, 0x52, 0xce, 0x2f, 0x09, 0xc9, 0xc1, 0x41, 0x56, 0x33, 0x72,
      0xc0, 0x40, 0x5c, 0xce, 0x23, 0x24, 0x17, 0x61, 0xb3, 0x61, 0x48, 0xad, 0x92, 0xcd, 0x4e,
      0x73, 0xc1, 0x8c,
  };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf192::bytes)> zk_hash_192_digest{
      0xad, 0xab, 0x02, 0xbb, 0xc0, 0xf9, 0x25, 0x25, 0x80, 0x01, 0x93, 0xe2, 0x33, 0x0c, 0xb9,
      0x4b, 0x59, 0xe6, 0x27, 0xb2, 0x4e, 0x2f, 0x70, 0x23, 0xf2, 0x3e, 0xcb, 0x54, 0xf1, 0xbd,
      0x26, 0xa1, 0x5c, 0xa8, 0x20, 0xfc, 0x2e, 0xcc, 0x84, 0x71, 0xec, 0x25, 0x09, 0xb0, 0x6e,
      0xa1, 0x4b, 0x95, 0x9e, 0x7e, 0x21, 0xbc, 0xb6, 0x52, 0x00, 0x9e, 0xcf, 0x47, 0xe3, 0x68,
      0x6c, 0xb7, 0x79, 0xab, 0xc0, 0x35, 0xb5, 0x31, 0xbc, 0x27, 0xbc, 0x6c, 0x3c, 0x0b, 0x27,
      0x04, 0xde, 0x81, 0x81, 0x9a, 0x28, 0x20, 0x44, 0x92, 0xb9, 0xc4, 0xde, 0xfa, 0x3a, 0x03,
      0xc7, 0x0a, 0x1b, 0x27, 0xcd, 0xd4, 0x7a, 0x8b, 0xa9, 0x57, 0x53, 0x00, 0x0e, 0xf0, 0x3a,
      0xe4, 0xb9, 0x4c, 0xfa, 0x03, 0xef, 0x96, 0x73, 0x6c, 0xe7, 0xb5, 0xb0, 0x30, 0xab, 0xb5,
      0x2e, 0xb5, 0xb3, 0xae, 0x94, 0x13, 0x20, 0xb4, 0xd7, 0xaf, 0x24, 0x25, 0xfd, 0x8e, 0x9d,
      0xa1, 0x3a, 0xc2, 0x39, 0x84, 0x41, 0x8e, 0xe2, 0x11, 0xfc, 0x55, 0x70, 0x5a, 0xe0, 0xc0,
      0x68, 0x27, 0xed, 0x9c, 0x77, 0x61, 0xe5, 0xb0, 0xe6, 0x4f, 0xd1, 0x16, 0x78, 0xf4, 0xa8,
      0x06, 0x0f, 0x79, 0x70, 0xe3, 0xd4, 0x29, 0xcb, 0x8f, 0xc2, 0x22, 0x45, 0x67, 0xbc, 0x4d,
      0xe5, 0x31, 0x1a, 0xab, 0x6f, 0xab, 0x19, 0xaf, 0x68, 0xe0, 0x9c, 0x4f,
  };

  constexpr std::array<uint8_t, TEST_VECTORS*(3 * sizeof(bf256::bytes) + sizeof(bf64::bytes))>
      zk_hash_256_sd{
          0xa8, 0x41, 0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26, 0x35, 0x61, 0x06, 0x26, 0xf1, 0x65,
          0x4b, 0x75, 0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e, 0x38, 0x4d, 0x37, 0x96, 0x2a, 0x77,
          0x4a, 0x4d, 0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37, 0x48, 0x68, 0x8a, 0x1b, 0x2a, 0x23,
          0x39, 0xeb, 0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda, 0xfe, 0xec, 0x36, 0x71, 0xf5, 0x24,
          0x85, 0x61, 0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd, 0xb7, 0xdb, 0xb0, 0x46, 0xc6, 0x90,
          0x8c, 0xd2, 0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0, 0x36, 0xcd, 0x6e, 0x82, 0x02, 0xbe,
          0x28, 0xac, 0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5, 0x38, 0x6b, 0x7f, 0x6b, 0xd9, 0x56,
          0x06, 0x00, 0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f, 0x18, 0xf2, 0xea, 0xf1, 0x51, 0x49,
          0xb3, 0x16, 0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59, 0x27, 0xc2, 0x91, 0x48, 0x0b, 0x04, 0x29,
          0x73, 0x37, 0xe6, 0x0e, 0x66, 0xdc, 0x4c, 0x64, 0x5c, 0x1a, 0xd1, 0x91, 0xaa, 0xa5, 0x11,
          0xa0, 0xbf, 0x03, 0x02, 0xc5, 0xc7, 0xc2, 0x38, 0x19, 0x18, 0x1d, 0xcc, 0x04, 0xb2, 0x51,
          0xf8, 0xe4, 0x2a, 0xc6, 0x6c, 0x93, 0x36, 0xcf, 0xfd, 0x30, 0x5a, 0x38, 0x56, 0x34, 0xe4,
          0x53, 0x0e, 0x2f, 0xfc, 0x68, 0x82, 0x1f, 0x83, 0x75, 0x03, 0x0f, 0xc9, 0x73, 0x10, 0x70,
          0xd2, 0x4b, 0x5b, 0xee, 0x1b, 0x3a, 0x76, 0x99, 0x01, 0xba, 0x56, 0x68, 0x5d, 0x41, 0x84,
          0x86, 0x40, 0x7e, 0x91, 0x2e, 0x1a, 0x28, 0x4c, 0xd4, 0x26, 0xca, 0xca, 0xa7, 0x02, 0xbb,
          0x77, 0x9f, 0x37, 0xa6, 0x13, 0x03, 0x82, 0xc4, 0x6e, 0x65, 0x68, 0xc4, 0xfd, 0xd4, 0x9f,
          0x97, 0xbd, 0x86, 0x67, 0xcc, 0x62, 0x4a, 0x1e, 0xdc, 0x29, 0xff, 0xe2, 0xcd, 0xfe, 0xee,
          0x74, 0x94, 0x6d, 0x4c, 0x12, 0x5e, 0xff, 0x05, 0xf2, 0x75, 0x87, 0x36, 0x17, 0x71, 0x47,
          0xc1, 0x5e, 0x42, 0x26, 0x37, 0xf6, 0x62, 0x0c, 0xac, 0x27, 0x83, 0xb8, 0x7f, 0x64, 0x53,
          0x70, 0xc7, 0x80, 0xbf, 0x23, 0xe3, 0x45, 0x35, 0xb7, 0xbc, 0x6d, 0x66, 0xcd, 0x94, 0xdf,
          0x61, 0xd9, 0xe0, 0xf5, 0x25, 0x26, 0x29, 0xe7, 0x5e, 0x83, 0xc3, 0x99, 0x4b, 0x64, 0xea,
          0x5c, 0x0e, 0x00, 0x6a, 0x40, 0xcb, 0x4b, 0x55, 0xfb, 0x45, 0x90, 0x4a, 0xfd, 0x5a, 0xbb,
          0x9e, 0x0b, 0x96, 0x63, 0x6b, 0xb1, 0x9f, 0x0d, 0xd3, 0x9f, 0xe1, 0x0e, 0x73, 0x2e, 0xeb,
          0x96, 0xc2, 0x7e, 0x78, 0xb3, 0x23, 0x6e, 0x20, 0x10, 0x7a, 0x18, 0xcc, 0x69, 0xce, 0x50,
          0xd0, 0x3e, 0xb7, 0x1e, 0x0e, 0x00, 0xd1, 0xd5, 0xf1, 0xc7, 0xea, 0xe0, 0xd0, 0x3f, 0x91,
          0x88, 0x34, 0x91, 0x16, 0xc7, 0x0d, 0x41, 0x5d, 0xbd, 0x74, 0xcf, 0x61, 0xb5, 0xf7, 0x65,
          0x0b, 0x4a, 0x25, 0x3b, 0x36, 0x73, 0x03, 0x46, 0x85, 0x62, 0x2b, 0x7b, 0x14, 0x5d, 0xe8,
          0x59, 0xed, 0x5c, 0x7d, 0x45, 0x01, 0xe7, 0x09, 0x3e, 0x8b, 0x2a, 0x23, 0x8d, 0x5a, 0xf6,
          0xa4, 0x75, 0x65, 0xf2, 0x00, 0xcf, 0x46, 0xdf, 0x53, 0x5a, 0x58, 0x0b, 0x0f, 0x78, 0x5d,
          0x23, 0xbf, 0x65, 0xd1, 0xdd, 0x0e, 0xa0, 0x24, 0xb4, 0x7d, 0x4b, 0x58, 0x19, 0x46, 0x8e,
          0x29, 0xb7, 0x6e, 0x9a, 0xc6, 0xb9, 0xb0, 0xf1, 0x0d, 0x29, 0xbd, 0x78, 0xeb, 0x37, 0x7d,
          0x6d, 0x1b, 0xe5, 0x81, 0xf7, 0x88, 0xce, 0xad, 0xcb, 0x44, 0x4e, 0xa0, 0x69, 0x90, 0x62,
          0x61, 0x96, 0x26, 0x8f, 0x97, 0x84, 0xeb, 0x5a, 0x2e, 0x81, 0xcf, 0x41, 0x1e, 0xd2, 0x0f,
          0x05, 0xa0, 0x63, 0x98, 0x3c, 0x07, 0xaf, 0xde, 0xc3, 0x48, 0xc9, 0x73, 0xee, 0x07, 0xc0,
          0x38, 0x35, 0xc0, 0x74, 0xf9, 0xf3, 0x8b, 0x65, 0xf9, 0x46, 0xe5, 0x4c, 0x97, 0xc3, 0x19,
          0x46, 0x7b, 0xa2, 0x5f, 0xc7, 0xe1, 0xd7, 0x5e, 0xa4, 0x12, 0x1f, 0x3d, 0x88, 0x6c, 0x24,
          0xfa, 0xf7, 0x7f, 0x88, 0x81, 0x94, 0xa9, 0x57, 0x2b, 0xa6, 0x83, 0x38, 0x32, 0x1e, 0x90,
          0x87, 0x87, 0x0c, 0xe1, 0x01, 0xf9, 0xaf, 0x39, 0x6f, 0x45, 0x12, 0x52, 0xa1, 0x50, 0x59,
          0xa5, 0xbb, 0xd2, 0x76, 0x87, 0xbb, 0xa8, 0x41, 0xa4, 0x77, 0xf5, 0x9a, 0x81, 0x99, 0x26,
          0x35, 0x61, 0x06, 0x26, 0xf1, 0x65, 0x4b, 0x75, 0x0d, 0xee, 0x74, 0x11, 0x19, 0xed, 0x2e,
          0x38, 0x4d, 0x37, 0x96, 0x2a, 0x77, 0x4a, 0x4d, 0x5c, 0x5f, 0xdd, 0x22, 0xfd, 0x76, 0x37,
          0x48, 0x68, 0x8a, 0x1b, 0x2a, 0x23, 0x39, 0xeb, 0x23, 0x3c, 0x30, 0x78, 0x5d, 0x4d, 0xda,
          0xfe, 0xec, 0x36, 0x71, 0xf5, 0x24, 0x85, 0x61, 0x6f, 0x18, 0x19, 0xe1, 0xdb, 0x76, 0xcd,
          0xb7, 0xdb, 0xb0, 0x46, 0xc6, 0x90, 0x8c, 0xd2, 0x79, 0xf8, 0x3f, 0x4b, 0x24, 0xd5, 0xc0,
          0x36, 0xcd, 0x6e, 0x82, 0x02, 0xbe, 0x28, 0xac, 0x02, 0x2c, 0x90, 0x21, 0xf8, 0xc5, 0xa5,
          0x38, 0x6b, 0x7f, 0x6b, 0xd9, 0x56, 0x06, 0x00, 0x0b, 0x2f, 0x71, 0x43, 0xc6, 0x83, 0x2f,
          0x18, 0xf2, 0xea, 0xf1, 0x51, 0x49, 0xb3, 0x16, 0x1d, 0x81, 0x3f, 0x45, 0xdd, 0x59, 0x27,
          0xc2, 0x91, 0x48, 0x0b, 0x04, 0x29, 0x73, 0x37, 0xe6, 0x0e, 0x66, 0xdc, 0x4c, 0x64, 0x5c,
          0x1a, 0xd1, 0x91, 0xaa, 0xa5, 0x11, 0xa0, 0xbf, 0x03, 0x02, 0xc5, 0xc7, 0xc2, 0x38, 0x19,
          0x18, 0x1d, 0xcc, 0x04, 0xb2, 0x51, 0xf8, 0xe4, 0x2a, 0xc6, 0x6c, 0x93, 0x36, 0xcf, 0xfd,
          0x30, 0x5a, 0x38, 0x56, 0x34, 0xe4, 0x53, 0x0e, 0x2f, 0xfc, 0x68, 0x82, 0x1f, 0x83, 0x75,
          0x03, 0x0f, 0xc9, 0x73, 0x10, 0x70, 0xd2, 0x4b, 0x5b, 0xee, 0x1b, 0x3a, 0x76, 0x99, 0x01,
          0xba, 0x56, 0x68, 0x5d, 0x41, 0x84, 0x86, 0x40, 0x7e, 0x91, 0x2e, 0x1a, 0x28, 0x4c, 0xd4,
          0x26, 0xca, 0xca, 0xa7, 0x02, 0xbb, 0x77, 0x9f, 0x37, 0xa6, 0x13, 0x03, 0x82, 0xc4, 0x6e,
          0x65, 0x68, 0xc4, 0xfd, 0xd4, 0x9f, 0x97, 0xbd, 0x86, 0x67, 0xcc, 0x62, 0x4a, 0x1e, 0xdc,
          0x29, 0xff, 0xe2, 0xcd, 0xfe, 0xee, 0x74,
      };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf256::bytes) * (xs + 1)> zk_hash_256_xs{
      0xc1, 0x67, 0xcf, 0xc9, 0x01, 0xed, 0x55, 0x19, 0x81, 0xdb, 0x8e, 0x47, 0xec, 0x4a, 0x48,
      0xd7, 0x13, 0x25, 0x2e, 0x43, 0xc6, 0x11, 0x1e, 0x16, 0x58, 0xa0, 0x96, 0x5d, 0x97, 0xed,
      0xb5, 0x30, 0xbc, 0x22, 0xbd, 0x17, 0x0a, 0xb3, 0x99, 0x1f, 0x7a, 0xc2, 0x57, 0x12, 0x4d,
      0x3f, 0x98, 0xca, 0xae, 0x9a, 0x8a, 0x8b, 0x72, 0xbb, 0x74, 0x39, 0xf6, 0xa7, 0xf0, 0x0c,
      0xb0, 0x0c, 0xed, 0x72, 0xfa, 0x78, 0x51, 0x17, 0x46, 0xf8, 0xb1, 0x52, 0x0f, 0xd4, 0x74,
      0x7f, 0xac, 0xb5, 0x62, 0xc9, 0x23, 0x4e, 0x9a, 0xc4, 0x8d, 0xd0, 0x8c, 0x7a, 0x58, 0x35,
      0xdf, 0xe8, 0xd9, 0x40, 0x3e, 0xa7, 0xc3, 0x69, 0x08, 0x2d, 0x7c, 0xaf, 0x9e, 0x5e, 0xb5,
      0x80, 0xc9, 0xca, 0xae, 0xd7, 0x36, 0x2c, 0xe2, 0xb0, 0xdf, 0xcd, 0x9e, 0x58, 0x71, 0x8f,
      0xad, 0xa8, 0xa0, 0x2e, 0x3e, 0x09, 0x59, 0x32, 0xb4, 0xe6, 0x3a, 0x52, 0x87, 0x2b, 0x00,
      0xf6, 0xfd, 0x53, 0x58, 0xe4, 0xfe, 0xaf, 0x03, 0x1a, 0x2d, 0x5f, 0x13, 0x43, 0x05, 0xb7,
      0xd7, 0x54, 0xf5, 0xb5, 0x9e, 0xdd, 0xdf, 0x28, 0xb4, 0x54, 0x05, 0x6f, 0x8a, 0x97, 0x52,
      0xce, 0x2f, 0x09, 0xc9, 0xc1, 0x41, 0x56, 0x33, 0x72, 0xc0, 0x40, 0x5c, 0xce, 0x23, 0x24,
      0x17, 0x61, 0xb3, 0x61, 0x48, 0xad, 0x92, 0xcd, 0x4e, 0x73, 0xc1, 0x8c, 0x05, 0x29, 0xb5,
      0x04, 0xbd, 0xcb, 0x34, 0x0a, 0xc5, 0x9e, 0xc4, 0x15, 0x39, 0x24, 0x92, 0xdb, 0xbb, 0xe2,
      0x03, 0x7a, 0x44, 0x17, 0xd9, 0x4c, 0x7d, 0xed, 0x65, 0x47, 0x2b, 0x5b, 0x2e, 0xee, 0x01,
      0x51, 0xa8, 0x0f, 0xb0, 0xbb, 0x08, 0x5e, 0x30, 0x3a, 0x74, 0xf7, 0xe9, 0xaa, 0x18, 0x20,
      0x24, 0x86, 0x25, 0xc9, 0x69, 0xa3, 0x39, 0x63, 0x18, 0xae, 0x78, 0xe9, 0xd4, 0x93, 0x42,
      0x19, 0xd1, 0x21, 0x8d, 0x0f, 0x35, 0xff, 0x75, 0xfc, 0x77, 0xa3, 0x45, 0x7c, 0x70, 0x97,
      0xe1, 0x82, 0x52, 0xd5, 0x61, 0xd7, 0x57, 0x87, 0xc2, 0x73, 0xbf, 0x72, 0xce, 0x98, 0xf6,
      0xc3, 0x3e, 0x18, 0xf9, 0xfa, 0xbb, 0x78, 0xc7, 0x00, 0xb0, 0x9a, 0xef, 0x05, 0x80, 0x4f,
      0x55, 0x86, 0xf6, 0x6a, 0xca, 0xed, 0x1d, 0x77, 0xfb, 0xec, 0x5e, 0xc1, 0x56, 0x44, 0x8e,
      0x7f, 0x8c, 0xbb, 0x69, 0x2b, 0x2a, 0xb8, 0x01, 0x2d, 0xc2, 0x32, 0x0a, 0x54, 0x85, 0xc5,
      0xe0, 0x2d, 0x0f, 0x1f, 0x20, 0xaa, 0xfc, 0x4f, 0x11, 0xd9, 0x18, 0xf5, 0xb7, 0xe2, 0xaa,
      0x55, 0xac, 0x58, 0x69, 0xbe, 0xd2, 0x7b, 0x7d, 0xbb, 0x89, 0x5e, 0xf7, 0x8d, 0x12, 0x66,
      0x51, 0x9f, 0xb2, 0xca, 0x30, 0xb0, 0xc3, 0x9b, 0xbd, 0x20, 0x31, 0x8a, 0x14, 0x11, 0x0d,
      0x6d, 0x2e, 0x1e, 0x4b, 0x87, 0x26, 0xeb, 0x28, 0xef, 0xbd, 0xe0, 0x8e, 0x2c, 0x91, 0x3b,
      0x00, 0x44, 0xbf, 0x33, 0xab, 0xb0, 0xbe, 0x37, 0x77, 0x1b, 0x43, 0xde, 0xaf, 0x82, 0xb2,
      0x8e, 0x3f, 0xd1, 0x1c, 0x37, 0x50, 0x9d, 0x76, 0x56, 0x14, 0xea, 0x7d, 0xf7, 0x2f, 0xc7,
      0x9f, 0x97, 0xcb, 0x6c, 0xe4, 0x7b, 0x5e, 0x3b, 0x0d, 0xe7, 0x45, 0x72, 0x2d, 0x04, 0x70,
      0x50, 0xe9, 0x70, 0xf7, 0x22, 0x36, 0x83, 0xaa, 0x88, 0x48, 0xdd, 0x2b, 0xee, 0xd0, 0xba,
      0x8c, 0x7b, 0x41, 0x14, 0x4e, 0xce, 0xd4, 0x47, 0x2e, 0x9c, 0xaa, 0x8a, 0x12, 0x7d, 0xb4,
      0x25, 0x9d, 0x8c, 0x86, 0x26, 0x75, 0x64, 0x81, 0x48, 0x67, 0xbb, 0x7e, 0x62, 0x90, 0x01,
      0xbc, 0x01, 0x1a, 0xb6, 0x18, 0x53, 0x9b, 0xec, 0xdf, 0xa8, 0x85, 0xcd, 0xd2, 0x41, 0x33,
      0x20, 0x7a, 0xdd, 0x96, 0xab, 0xb0, 0x68, 0x41, 0x7b, 0xee, 0x5e, 0xd8, 0x0b, 0x8e, 0xa0,
      0x3d, 0xdc, 0x18, 0x62, 0xfa, 0x33, 0x76, 0x95, 0x04, 0x02, 0xda, 0x4e, 0x43, 0xe2, 0x93,
      0x3a, 0x4f, 0xe7, 0x01, 0x0c, 0x33, 0x94, 0x88, 0x9e, 0x87, 0xfd, 0xb1, 0x60, 0xaa, 0x1b,
      0x6c, 0x4f, 0xd4, 0x70, 0x42, 0x99, 0x17, 0xaa, 0xf0, 0x04, 0xd7, 0x73, 0xba, 0x87, 0x86,
      0x8b, 0x2a, 0x59, 0x81, 0x08, 0xaf, 0xcd, 0x99, 0xad, 0xa3, 0xf8, 0x53, 0xcb, 0x8c, 0xf6,
      0x5b, 0x02, 0x4b, 0x38, 0xc0, 0x35, 0xfb, 0xb8, 0xa8, 0x54, 0xba, 0x3c, 0x7d, 0x38, 0xe7,
      0xc3, 0x67, 0x0f, 0xe4, 0xef, 0x84, 0xc8, 0x0e, 0x1f, 0xd9, 0xf7, 0xd4, 0x9d, 0x5f, 0xb4,
      0xd7, 0xb5, 0x9a, 0x8a, 0x93, 0xfd, 0x97, 0xd0, 0x9e, 0xbb, 0xb9, 0x0d, 0x18, 0xbb, 0x71,
      0x2b, 0x64, 0xaf, 0x24, 0x9c, 0xb2, 0xfb, 0xc7, 0xa1, 0x1a, 0xc0, 0x65, 0x55, 0xbf, 0xf7,
      0xb5, 0xab, 0x4f, 0x7d, 0xd5, 0xc2, 0x84, 0x0d, 0x07, 0x73, 0x46, 0x80, 0xad, 0x50, 0x84,
      0x17, 0xb1, 0x20, 0x38, 0x09, 0xf1, 0xbf, 0xc6, 0xde, 0x25, 0x5f, 0xea, 0x09, 0x4b, 0x15,
      0x64, 0x75, 0x4c, 0xbe, 0x4b, 0x2e, 0xeb, 0x6f, 0x6e, 0xb7, 0x6f, 0xc1, 0xbf, 0x39, 0xa7,
      0xc1, 0x93, 0xf6, 0x89, 0x03, 0x07, 0xaa, 0xec, 0x0f, 0x36, 0x1c, 0x89, 0x51, 0x57, 0x37,
      0x31, 0x43, 0xa0, 0x80, 0x1e, 0x2b, 0x8b, 0x9c, 0xc6, 0xb3, 0xac, 0xd0, 0x8d, 0x32, 0x2e,
      0x56, 0x91, 0xf5, 0xc7, 0xcf, 0xf2, 0x29, 0xda, 0x7c, 0x1a, 0x98, 0x38, 0x3f, 0x1c, 0x7a,
      0x29, 0x7d, 0x8e, 0x0b, 0xc2, 0x0e, 0x69, 0x29, 0x46, 0x3c, 0xe5, 0xa6, 0x89, 0x04, 0x09,
      0xa7, 0x76, 0x57, 0xab, 0xa4, 0x80, 0x17, 0x50, 0x9c, 0x81, 0x59, 0xef, 0x9c, 0x09, 0x9c,
      0x88, 0x05, 0x5f, 0x3a, 0x62, 0x75, 0x50, 0x28, 0x98, 0x29, 0x2d, 0x99, 0x02, 0xa1, 0x1e,
      0xde, 0x95, 0x3b, 0x25, 0x4f, 0x05, 0xfe, 0xc5, 0xb0, 0x6f, 0x38, 0xeb, 0x48, 0x0a, 0xf5,
      0x15, 0x53, 0xf2, 0x44, 0x69, 0x74, 0x6f, 0x4c, 0xca, 0x99, 0x3c, 0x8a, 0x26, 0x09, 0x06,
      0xbf, 0xec, 0x69, 0x95, 0x32, 0xe9, 0xa6, 0x2b, 0xe7, 0x09, 0x4c, 0xba, 0xec, 0x61, 0xcf,
      0x50, 0x49, 0xe0, 0x78, 0x54, 0x18, 0x38, 0xa2, 0x1d, 0x85, 0xf6, 0xed, 0xcf, 0x5b, 0xa4,
      0xfe, 0xa2, 0x76, 0xeb, 0x3e, 0x0e, 0x04, 0xdd, 0x4a, 0x5f, 0xc5, 0x21, 0x64, 0x4b, 0x7f,
      0x33, 0x27, 0xd8, 0xbd, 0x97, 0x54, 0xed, 0xa9, 0xab, 0x3d, 0xc0, 0xbc, 0xf5, 0x23, 0xaf,
      0x76, 0x6c, 0x4e, 0xae, 0xfc, 0x8c, 0x97, 0x3b, 0x79, 0x01, 0x5e, 0xc1, 0xe6, 0x45, 0x1a,
      0x6c, 0x71, 0x33, 0xd0, 0x8d, 0x48, 0x8a, 0xa4, 0x15, 0x5f, 0xcb, 0x21, 0xf4, 0x65, 0xce,
      0x65, 0x55, 0xc1, 0x91, 0x74, 0x27, 0x0a, 0xf9, 0xa0, 0xc9, 0xb6, 0x2e, 0x1f, 0x26, 0x67,
      0x4f, 0xa5, 0x0b, 0xda, 0x54, 0xa7, 0xea, 0xc9, 0x03, 0x99, 0x9f, 0x3b, 0x79, 0xc2, 0xed,
      0xdc, 0xfa, 0x5d, 0x0e, 0x34, 0x20, 0xe3, 0x9f, 0x72, 0x29, 0xdd, 0x18, 0xcd, 0x08, 0x67,
      0xaa, 0xb8, 0xfb, 0x2f, 0x59, 0xb4, 0xbc, 0x81, 0x42, 0x66, 0xb5, 0x9c, 0x71, 0x73, 0xaf,
      0x95, 0xda, 0x3b, 0xec, 0xc3, 0x4b, 0xb6, 0x15, 0x02, 0x38, 0xaf, 0x1e, 0x43, 0x09, 0x64,
      0xc5, 0x04, 0xa0, 0x63, 0x05, 0xdb, 0x0c, 0xec, 0x86, 0xa5, 0x4b, 0x9d, 0x99, 0x02, 0x2a,
      0x54, 0x0c, 0xbd, 0xbe, 0x70, 0x94, 0x1f, 0x1c, 0x87, 0xb8, 0xd1, 0x74, 0xb6, 0x75, 0x47,
      0x39, 0xd2, 0x76, 0x71, 0x33, 0xea, 0x37, 0xdd, 0x66, 0xae, 0x2f, 0x11, 0xff, 0xea, 0xd5,
      0xf1, 0x1f, 0xe4, 0x45, 0xb2, 0xf4, 0x2c, 0x8a, 0x7d, 0x50, 0xb0, 0x77, 0x50, 0xe4, 0x46,
      0xc8, 0xc2, 0x2e, 0xf3, 0xc1, 0x3a, 0x9e, 0xeb, 0x44, 0x1f, 0xd6, 0xac, 0xe8, 0xf3, 0x5e,
      0x0f, 0x5e, 0x5d, 0x59, 0x99, 0x8c, 0x15, 0x54, 0x68, 0x3e, 0x98, 0x49, 0x0e, 0x32, 0x16,
      0x80, 0xfd, 0x14, 0x50, 0xc2, 0x8d, 0x0c, 0x62, 0xf1, 0x0c, 0x27, 0x52, 0xe1, 0x87, 0x53,
      0xb5, 0x33, 0xb3, 0x4b, 0x9e, 0xf6, 0x1f, 0xea, 0x0c, 0xba, 0xc0, 0xd3, 0xa6, 0x13, 0x48,
      0xf6, 0xa4, 0xc7, 0x1d, 0x44, 0x56, 0xbb, 0xd9, 0x78, 0xe0, 0x5e, 0xee, 0xd7, 0x8e, 0xa5,
      0xb5, 0x63, 0x23, 0xe9, 0x8a, 0x90, 0x9f, 0x72, 0xd6, 0xfc, 0xc2, 0xc8, 0x4b, 0x49, 0x89,
      0x09, 0xf7, 0xc5, 0x46, 0x47, 0x3b, 0xfe, 0xe0, 0xa6, 0x51, 0x58, 0x85, 0x7b, 0x49, 0x2f,
      0x44, 0x57, 0xe7, 0x19, 0x39, 0x96, 0xa5, 0x17, 0x8c, 0xf1, 0x72, 0x57, 0xed, 0xac, 0x69,
      0x11, 0x3e, 0x1f, 0xf2, 0xbb, 0x80, 0x4f, 0xad, 0xe9, 0xe9, 0x34, 0x75, 0x33, 0xf2, 0x1f,
      0x99, 0xa6, 0x04, 0x6c, 0xb7, 0x1e, 0x38, 0x1b, 0xb0, 0xad, 0x47, 0x43, 0x5a, 0x17, 0x91,
      0x46, 0xbd, 0xf1, 0x0b, 0x27, 0xab, 0x0d, 0x45, 0x9b, 0x7f, 0x13, 0xa3, 0x77, 0x9e, 0xdf,
      0x5e, 0x37, 0x7f, 0x19, 0xea, 0x10, 0xf8, 0xd7, 0x68, 0x5f, 0x14, 0x14, 0x76, 0xc7, 0xb8,
      0x71, 0x9b, 0x5a, 0x7f, 0xed, 0x34, 0xff, 0xbf, 0x19, 0xcf, 0xf9, 0xef, 0x85, 0x86, 0xa5,
      0x0b, 0x1a, 0xc0, 0x67, 0x09, 0x4b, 0x8b, 0xe8, 0x05, 0x65, 0xfc, 0x9e, 0x19, 0x1e, 0x8c,
      0xe3, 0xfd, 0x93, 0x73, 0x4f, 0x2a, 0x29, 0xd4, 0xba, 0x87, 0xaf, 0xd4, 0xf2, 0xf9, 0x67,
      0x8c, 0xd0, 0x0d, 0xcd, 0x64, 0xc7, 0x60, 0x4a, 0x2c, 0xb4, 0x96, 0xb7, 0xa5, 0x4d, 0x44,
      0x3e, 0x6b, 0xa9, 0x7f, 0x83, 0xc8, 0x37, 0x0d, 0xfa, 0x23, 0x14, 0xc3, 0x18, 0xaf, 0x0d,
      0xa8, 0xee, 0x84, 0x03, 0x24, 0xac, 0xfc, 0xc9, 0x2e, 0xa8, 0xcc, 0x53, 0x63, 0x97, 0xba,
      0xed, 0x68, 0x25, 0x85, 0x8e, 0xf5, 0x35, 0x55, 0xaa, 0x9e, 0x38, 0x93, 0xfd, 0x15, 0x31,
      0xc4, 0x9f, 0x48, 0xac, 0xa1, 0x7a, 0xa3, 0xf4, 0x1d, 0xac, 0xa8, 0x17, 0x91, 0x52, 0x5a,
      0x50, 0x0b, 0x9a, 0x3f, 0x96, 0xd7, 0x23, 0x6e, 0x37, 0xe1, 0xb9, 0xd6, 0xb3, 0xee, 0x25,
      0x50, 0x72, 0x08, 0x6d, 0xb3, 0x14, 0xb9, 0x4e, 0xa5, 0x80, 0x78, 0x99, 0x10, 0xc8, 0x4e,
      0x63, 0x10, 0xe1, 0xaf, 0x80, 0x12, 0x38, 0xbe, 0x49, 0x36, 0xdd, 0x6d, 0x35, 0xe8, 0x64,
      0xcf, 0x5c, 0xec, 0xdb, 0xcd, 0xb2, 0x75, 0x43, 0x44, 0x75, 0x90, 0x87, 0xbb, 0x3c, 0x08,
      0xe1, 0xb5, 0xbd, 0x7a, 0xc0, 0xd1, 0x2b, 0x53, 0x28, 0x4c, 0xb2, 0xf4, 0x7b, 0xaf, 0xbb,
      0xd2, 0xcd, 0xd7, 0x8b, 0xb4, 0xf7, 0x1a, 0x21, 0xa5, 0x75, 0x67, 0xa6, 0x91, 0xed, 0x2b,
      0xe7, 0x83, 0x35, 0x62, 0xf6, 0xff, 0x20, 0xd7, 0x06, 0xa2, 0x93, 0x85, 0x5a, 0xdb, 0x3f,
      0xd3, 0xc8, 0xe7, 0x35, 0xd5, 0xec, 0xd9, 0x64, 0x62, 0xa2, 0xbb, 0x64, 0xa9, 0xf4, 0xd4,
      0x2b, 0xd7, 0x20, 0x6b, 0x56, 0xba, 0xca, 0xc3, 0xe3, 0xc0, 0x34, 0x1c, 0xe3, 0xff, 0x0d,
      0xba, 0x0f, 0x25, 0x7a, 0xc6, 0x15, 0x38, 0xf6, 0x33, 0x3b, 0xfb, 0xef, 0xe2, 0xf0, 0x31,
      0xb9, 0xf9, 0x1f, 0xb7, 0x83, 0xd2, 0xe4, 0xee, 0xcc, 0x53, 0x09, 0xbf, 0x9d, 0x33, 0xa1,
      0x56, 0x0c, 0x4d, 0x7a, 0xf7, 0x53, 0x96, 0xb4, 0x98, 0x56, 0x93, 0x71, 0x8a, 0x84, 0x0a,
      0xea, 0xed, 0x98, 0x0c, 0xa0, 0xf3, 0x58, 0x21, 0xa1, 0x6c, 0xc7, 0x41, 0x31, 0xa0, 0x28,
      0xb7, 0x80, 0x79, 0xca, 0x8b, 0x46, 0x4b, 0x38, 0xf4, 0xb1, 0xd0, 0x02, 0x34, 0x74, 0x09,
      0xdd, 0xb3, 0x74, 0x91, 0x8b, 0x45, 0x5a, 0x3b, 0x38, 0xe8, 0xfe, 0xde, 0x1d, 0xc4, 0x4d,
      0xaa, 0xac, 0x70, 0xf9, 0x6d, 0xb6, 0x63, 0x1b, 0x10, 0xd1, 0x42, 0x4d, 0xdd, 0x9c, 0xc0,
      0xc6, 0xd3, 0xca, 0x72, 0x17, 0x4e, 0x6b, 0x49, 0x40, 0xf9, 0x8a, 0x40, 0x78, 0xd1, 0xbe,
      0xc4, 0x6f, 0xba, 0xa2, 0x67, 0xc3, 0xc6, 0x45, 0x78, 0xf3, 0x31, 0xf5, 0x9f, 0x0c, 0x80,
      0x8e, 0x3c, 0xf0, 0x12, 0x96, 0x55, 0xcb, 0x04, 0xff, 0x52, 0x9a, 0x14, 0x7b, 0xe8, 0x31,
      0x0e, 0x6e, 0xf3, 0xc5, 0x2e, 0x80, 0xdd, 0x85, 0xb7, 0xe0, 0x30, 0x10, 0x53, 0xd4, 0xf5,
      0x1d, 0x34, 0xd9, 0x24, 0xc1, 0x2e, 0x2e, 0xfe, 0x41, 0x3a, 0x75, 0x39, 0xc7, 0xc4, 0xab,
      0x38, 0x2c, 0x5e, 0xc3, 0xb4, 0x02, 0xda, 0x8c, 0xf3, 0x85, 0x67, 0xf1, 0x33, 0x7d, 0x6d,
      0xb5, 0xfd, 0x33, 0x2c, 0x67, 0x85, 0x24, 0xbc, 0xa4, 0x15, 0x64, 0x6c, 0xd1, 0x21, 0x06,
      0x6f, 0x06, 0x9e, 0x24, 0x7a, 0xb8, 0x1d, 0x46, 0xeb, 0x49, 0x51, 0x6c, 0xfd, 0x89, 0xb8,
      0xe3, 0xca, 0x43, 0x62, 0xfa, 0x66, 0x86, 0x16, 0x43, 0xd3, 0xce, 0x95, 0x62, 0xe4, 0xf1,
      0x4a, 0x36, 0xe2, 0xb4, 0xe0, 0xb1, 0x5d, 0xa0, 0xc6, 0x50, 0xc0, 0xc6, 0x30, 0xf1, 0x06,
      0x24, 0x02, 0xe0, 0x83, 0x97, 0x5f, 0x7a, 0x73, 0x61, 0x8a, 0xdc, 0x8a, 0x66, 0x18, 0xdf,
      0x7b, 0xa6, 0xe2, 0xfb, 0x0d, 0x63, 0xd1, 0xa0, 0xde, 0x56, 0x07, 0x86, 0x90, 0xc6, 0x1e,
      0x2d, 0xdb, 0x44, 0xae, 0xb5, 0xc4, 0xd2, 0x93, 0xf4, 0xb7, 0xdb, 0xe0, 0xac, 0x86, 0x07,
      0x14, 0x26, 0xfc, 0x75, 0x78, 0x16, 0x06, 0xc4, 0xfb, 0x72, 0xa9, 0x75, 0x06, 0x09, 0x8d,
      0xd4, 0xa4, 0x3c, 0x28, 0x87, 0xb7, 0xf1, 0xda, 0x67, 0x1d, 0x8e, 0xff, 0x4b, 0xfa, 0x14,
      0x3d, 0x6e, 0x8a, 0x9c, 0x26, 0xa7, 0x52, 0x9e, 0x3b, 0x39, 0xc8, 0x97, 0x17, 0x6c, 0x0c,
      0xc4, 0x13, 0xd7, 0xf3, 0xc3, 0x17, 0x00, 0x55, 0xec, 0x08, 0xd8, 0x1e, 0xc1, 0x8a, 0x23,
      0x8c, 0x1c, 0x8f, 0x1d, 0x76, 0x45, 0x8b, 0x1b, 0x81, 0x19, 0x6b, 0xf1, 0x3d, 0x93, 0xf6,
      0x8f, 0x77, 0xd8, 0x35, 0xc0, 0x5f, 0xd8, 0x4c, 0x5d, 0x7e, 0x7e, 0x26, 0xd0, 0xeb, 0x53,
      0x52, 0x1b, 0x2d, 0xb9, 0xcd, 0x8e, 0xcf, 0xc9, 0x1b, 0xe2, 0x6a, 0x81, 0xc9, 0x6d, 0xe3,
      0xd8, 0xa6, 0xf0, 0xd0, 0x29, 0xbe, 0x88, 0x11, 0x20, 0xcf, 0x67, 0x9d, 0x29, 0x2c, 0x02,
      0xee, 0x5b, 0xeb, 0x47, 0xc0, 0x83, 0xc6, 0x3d, 0xa1, 0x3d, 0x00, 0x43, 0x0a, 0xba, 0xe8,
      0xea, 0x00, 0x0e, 0x51, 0xb6, 0x51, 0x2e, 0x60, 0xb7, 0xba, 0xc9, 0x19, 0xcb, 0x4d, 0xf3,
      0x11, 0xc1, 0x15, 0x7d, 0x97, 0xde, 0x94, 0x42, 0xf8, 0x78, 0x91, 0x29, 0xe0, 0x18, 0x27,
      0xff, 0x4d, 0x8c, 0xde, 0xfd, 0xf8, 0x0b, 0x28, 0x7a, 0x7d, 0xd9, 0x22, 0x8a, 0x16, 0xcf,
      0xf6, 0xf9, 0x38, 0x9c, 0x82, 0x83, 0x51, 0xe2, 0x72, 0xe0, 0x5b, 0x58, 0x75, 0xdf, 0xf5,
      0x2e, 0x2e, 0xfc, 0x67, 0xb4, 0x14, 0xdc, 0xc5, 0xf8, 0x09, 0xf8, 0x10, 0xde, 0x73, 0xe7,
      0x66, 0x0f, 0xc7, 0x4f, 0x09, 0x72, 0x22, 0xda, 0x3e, 0xfb, 0xad, 0xe8, 0x35, 0xb8, 0xed,
      0xa9, 0x29, 0x44, 0x82, 0xd5, 0x68, 0x15, 0x11, 0x4f, 0xc9, 0xd0, 0x33, 0x64, 0xc5, 0xc7,
      0xe3, 0xed, 0xe9, 0x25, 0x56, 0x22, 0xc9, 0x4d, 0x0c, 0x34, 0xbd, 0xaf, 0xad, 0x51, 0x02,
      0x09, 0x09, 0x4c, 0x24, 0x9e, 0xbd, 0x01, 0x1d, 0x4f, 0xa6, 0x6a, 0x52, 0xc6, 0x81, 0x0c,
      0xc1, 0xc8, 0x24, 0x59, 0xac, 0x3b, 0x76, 0xe6, 0xb4, 0x0a, 0xe6, 0x60, 0x5e, 0x2e, 0x51,
      0x7f, 0x28, 0x48, 0x92, 0xab, 0x73, 0xf1, 0x90, 0x06, 0x43, 0xd3, 0xce, 0x95, 0x62, 0xe4,
      0xf1, 0x4a, 0x36, 0xe2, 0xb4, 0xe0, 0xb1, 0x5d, 0xa0, 0xc6, 0x50, 0xc0, 0xc6, 0x30, 0xf1,
      0x06, 0x24, 0x02, 0xe0, 0x83, 0x97, 0x5f, 0x7a, 0x73, 0x61, 0x8a, 0xdc, 0x8a, 0x66, 0x18,
      0xdf, 0x7b, 0xa6, 0xe2, 0xfb, 0x0d, 0x63, 0xd1, 0xa0, 0xde, 0x56, 0x07, 0x86, 0x90, 0xc6,
      0x1e, 0x2d, 0xdb, 0x44, 0xae, 0xb5, 0xc4, 0xd2, 0x93, 0xf4, 0xb7, 0xdb, 0xe0, 0xac, 0x86,
      0x07, 0x14, 0x26, 0xfc, 0x75, 0x78, 0x16, 0x06, 0xc4, 0xfb, 0x72, 0xa9, 0x75, 0x06, 0x09,
      0x8d, 0xd4, 0xa4, 0x3c, 0x28, 0x87, 0xb7, 0xf1, 0xda, 0x67, 0x1d, 0x8e, 0xff, 0x4b, 0xfa,
      0x14, 0x3d, 0x6e, 0x8a, 0x9c, 0x26, 0xa7, 0x52, 0x9e, 0x3b, 0x39, 0xc8, 0x97, 0x17, 0x6c,
      0x0c, 0xc4, 0x13, 0xd7, 0xf3, 0xc3, 0x17, 0x00, 0x55, 0xec, 0x08, 0xd8, 0x1e, 0xc1, 0x8a,
      0x23, 0x8c, 0x1c, 0x8f, 0x1d, 0x76, 0x45, 0x8b, 0x1b, 0x81, 0x19, 0x6b, 0xf1, 0x3d, 0x93,
      0xf6, 0x8f, 0x77, 0xd8, 0x35, 0xc0, 0x5f, 0xd8, 0x4c, 0x5d, 0x7e, 0x7e, 0x26, 0xd0, 0xeb,
      0x53, 0x52, 0x1b, 0x2d, 0xb9, 0xcd, 0x8e, 0xcf, 0xc9, 0x1b, 0xe2, 0x6a, 0x81, 0xc9, 0x6d,
      0xe3, 0xd8, 0xa6, 0xf0, 0xd0, 0x29, 0xbe, 0x88, 0x11, 0x20, 0xcf, 0x67, 0x9d, 0x29, 0x2c,
      0x02, 0xee, 0x5b, 0xeb, 0x47, 0xc0, 0x83, 0xc6, 0x3d, 0xa1, 0x3d, 0x00, 0x43, 0x0a, 0xba,
      0xe8, 0xea, 0x00, 0x0e, 0x51, 0xb6, 0x51, 0x2e, 0x60, 0xb7, 0xba, 0xc9, 0x19, 0xcb, 0x4d,
      0xf3, 0x11, 0xc1, 0x15, 0x7d, 0x97, 0xde, 0x94, 0x42, 0xf8, 0x78, 0x91, 0x29, 0xe0, 0x18,
      0x27, 0xff, 0x4d, 0x8c, 0xde, 0xfd, 0xf8, 0x0b, 0x28, 0x7a, 0x7d, 0xd9, 0x22, 0x8a, 0x16,
      0xcf, 0xf6, 0xf9, 0x38, 0x9c, 0x82, 0x83, 0x51, 0xe2,
  };
  constexpr std::array<uint8_t, TEST_VECTORS * sizeof(bf256::bytes)> zk_hash_256_digest{
      0x6a, 0xb0, 0xbf, 0xaf, 0xe7, 0xc3, 0x04, 0x7a, 0xd3, 0xcc, 0x54, 0x47, 0x31, 0x63, 0xa6,
      0x44, 0x3e, 0x34, 0x72, 0xac, 0xe7, 0xb5, 0xb5, 0x44, 0x79, 0x85, 0x15, 0xb1, 0xa5, 0x4a,
      0xd0, 0xaf, 0xed, 0xbb, 0xaa, 0x31, 0xbb, 0xf0, 0x9f, 0x39, 0x80, 0xaf, 0xa1, 0x5b, 0x92,
      0x31, 0xc3, 0xac, 0x4a, 0x1c, 0xaa, 0x75, 0x0e, 0xfe, 0x18, 0x5a, 0x28, 0x2c, 0x95, 0xe3,
      0x62, 0x22, 0x26, 0xef, 0xe6, 0xdc, 0xce, 0xf4, 0xca, 0xd0, 0x97, 0x72, 0xe3, 0x27, 0xb8,
      0x65, 0x35, 0xe6, 0x71, 0xbc, 0x80, 0x96, 0x93, 0xb9, 0x8a, 0xd8, 0x77, 0x63, 0xcc, 0x04,
      0x11, 0x34, 0xba, 0x01, 0xe8, 0x66, 0x2e, 0x6f, 0xa9, 0xe0, 0x5b, 0x44, 0x6a, 0x2e, 0x1a,
      0x97, 0x4e, 0x50, 0xdc, 0xfd, 0x66, 0xc2, 0x14, 0xeb, 0x22, 0x41, 0x13, 0x58, 0x9f, 0x77,
      0xfa, 0x38, 0x36, 0x94, 0x9e, 0xc0, 0xf9, 0x72, 0x6b, 0xb7, 0x77, 0x25, 0x80, 0xb6, 0xb7,
      0xfd, 0x2c, 0x4e, 0x5f, 0x16, 0x2f, 0x9f, 0x8c, 0x83, 0xfe, 0x9e, 0xdd, 0x16, 0x32, 0x68,
      0xcb, 0xf6, 0x62, 0x73, 0xe2, 0x05, 0x63, 0xb9, 0xb4, 0x9f, 0x97, 0xe9, 0x85, 0x2c, 0x55,
      0x57, 0x32, 0x5c, 0x83, 0x7b, 0x06, 0xa7, 0x15, 0xd9, 0x66, 0x69, 0xf0, 0x81, 0x3a, 0xca,
      0xb1, 0x8d, 0xb8, 0x7c, 0x7b, 0x9d, 0x16, 0x0b, 0xcd, 0xab, 0x4b, 0x22, 0xb6, 0x78, 0x3f,
      0xed, 0x63, 0x52, 0x44, 0x7c, 0x3f, 0x3f, 0xd7, 0x29, 0x61, 0x07, 0x68, 0x50, 0xc6, 0x80,
      0xff, 0x31, 0xb9, 0x5f, 0x77, 0x7c, 0xe2, 0x65, 0xbb, 0xe2, 0x56, 0xe4, 0x59, 0x9c, 0xb4,
      0xf5, 0x0b, 0x08, 0xff, 0x5b, 0xd9, 0xd1, 0x5e, 0x98, 0x1b, 0xd6, 0x40, 0xf5, 0xdb, 0x7f,
      0x17, 0x1e, 0xd4, 0x0b, 0x4b, 0x0d, 0x2a, 0xfe, 0x65, 0x18, 0xa6, 0x58, 0xc0, 0xb3, 0x7d,
      0xd2,
  };
} // namespace

using boost::unit_test::data::xrange;

BOOST_DATA_TEST_CASE(test_vole_hash_128_tv, xrange(TEST_VECTORS), i) {
  std::array<uint8_t, sizeof(bf128::bytes) + UNIVERSAL_HASH_B> digest, expected_digest;
  vole_hash_128(
      digest.data(), vole_hash_128_sd.data() + i * (5 * sizeof(bf128::bytes) + 8),
      vole_hash_128_xs.data() + i * (sizeof(bf128::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B), ell);
  std::copy(vole_hash_128_digest.data() + i * expected_digest.size(),
            vole_hash_128_digest.data() + (i + 1) * expected_digest.size(),
            expected_digest.begin());
  BOOST_TEST(digest == expected_digest);
}

BOOST_DATA_TEST_CASE(test_vole_hash_192_tv, xrange(TEST_VECTORS), i) {
  std::array<uint8_t, sizeof(bf192::bytes) + UNIVERSAL_HASH_B> digest, expected_digest;
  vole_hash_192(
      digest.data(), vole_hash_192_sd.data() + i * (5 * sizeof(bf192::bytes) + 8),
      vole_hash_192_xs.data() + i * (sizeof(bf192::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B), ell);
  std::copy(vole_hash_192_digest.data() + i * expected_digest.size(),
            vole_hash_192_digest.data() + (i + 1) * expected_digest.size(),
            expected_digest.begin());
  BOOST_TEST(digest == expected_digest);
}

BOOST_DATA_TEST_CASE(test_vole_hash_256_tv, xrange(TEST_VECTORS), i) {
  std::array<uint8_t, sizeof(bf256::bytes) + UNIVERSAL_HASH_B> digest, expected_digest;
  vole_hash_256(
      digest.data(), vole_hash_256_sd.data() + i * (5 * sizeof(bf256::bytes) + 8),
      vole_hash_256_xs.data() + i * (sizeof(bf256::bytes) * 2 + ell / 8 + UNIVERSAL_HASH_B), ell);
  std::copy(vole_hash_256_digest.data() + i * expected_digest.size(),
            vole_hash_256_digest.data() + (i + 1) * expected_digest.size(),
            expected_digest.begin());
  BOOST_TEST(digest == expected_digest);
}

BOOST_DATA_TEST_CASE(test_zk_hash_128_tv, xrange(TEST_VECTORS), i) {
  std::array<bf128_t, xs + 1> x;
  for (unsigned int j = 0; j != xs + 1; ++j) {
    bf128::bytes tmp;
    std::copy(zk_hash_128_xs.data() + i * (xs * sizeof(bf128::bytes)) + j * sizeof(bf128::bytes),
              zk_hash_128_xs.data() + i * (xs * sizeof(bf128::bytes)) +
                  (j + 1) * sizeof(bf128::bytes),
              tmp.begin());
    x[j] = bf128{tmp}.as_internal();
  }

  std::array<uint8_t, sizeof(bf128::bytes)> digest{}, expected_digest;
  std::copy(zk_hash_128_digest.data() + i * sizeof(bf128::bytes),
            zk_hash_128_digest.data() + (i + 1) * sizeof(bf128::bytes), expected_digest.begin());
  zk_hash_128(digest.data(),
              zk_hash_128_sd.data() + i * (3 * sizeof(bf128::bytes) + sizeof(bf64::bytes)),
              x.data(), xs);
  BOOST_TEST(digest == expected_digest);
}

BOOST_DATA_TEST_CASE(test_zk_hash_192_tv, xrange(TEST_VECTORS), i) {
  std::array<bf192_t, xs + 1> x;
  for (unsigned int j = 0; j != xs + 1; ++j) {
    bf192::bytes tmp;
    std::copy(zk_hash_192_xs.data() + i * (xs * sizeof(bf192::bytes)) + j * sizeof(bf192::bytes),
              zk_hash_192_xs.data() + i * (xs * sizeof(bf192::bytes)) +
                  (j + 1) * sizeof(bf192::bytes),
              tmp.begin());
    x[j] = bf192{tmp}.as_internal();
  }

  std::array<uint8_t, sizeof(bf192::bytes)> digest{}, expected_digest;
  std::copy(zk_hash_192_digest.data() + i * sizeof(bf192::bytes),
            zk_hash_192_digest.data() + (i + 1) * sizeof(bf192::bytes), expected_digest.begin());
  zk_hash_192(digest.data(),
              zk_hash_192_sd.data() + i * (3 * sizeof(bf192::bytes) + sizeof(bf64::bytes)),
              x.data(), xs);
  BOOST_TEST(digest == expected_digest);
}

BOOST_DATA_TEST_CASE(test_zk_hash_256_tv, xrange(TEST_VECTORS), i) {
  std::array<bf256_t, xs + 1> x;
  for (unsigned int j = 0; j != xs + 1; ++j) {
    bf256::bytes tmp;
    std::copy(zk_hash_256_xs.data() + i * (xs * sizeof(bf256::bytes)) + j * sizeof(bf256::bytes),
              zk_hash_256_xs.data() + i * (xs * sizeof(bf256::bytes)) +
                  (j + 1) * sizeof(bf256::bytes),
              tmp.begin());
    x[j] = bf256{tmp}.as_internal();
  }

  std::array<uint8_t, sizeof(bf256::bytes)> digest{}, expected_digest;
  std::copy(zk_hash_256_digest.data() + i * sizeof(bf256::bytes),
            zk_hash_256_digest.data() + (i + 1) * sizeof(bf256::bytes), expected_digest.begin());
  zk_hash_256(digest.data(),
              zk_hash_256_sd.data() + i * (3 * sizeof(bf256::bytes) + sizeof(bf64::bytes)),
              x.data(), xs);
  BOOST_TEST(digest == expected_digest);
}

BOOST_AUTO_TEST_SUITE_END();
