#ifndef TESTS_PRG_TVS_HPP
#define TESTS_PRG_TVS_HPP

#include <array>
#include <cstdint>

namespace prg_tvs {
  constexpr std::array<uint8_t, 16> key_128{
      0x28, 0x82, 0x4c, 0x78, 0xee, 0x7e, 0x9d, 0xa7,
      0x9e, 0x4f, 0xc7, 0x03, 0x9c, 0x2e, 0x63, 0xfa,
  };
  constexpr std::array<uint8_t, 16> iv_128{
      0x87, 0x34, 0x14, 0x93, 0x5b, 0xa6, 0x50, 0x94,
      0x47, 0x3e, 0x81, 0x3b, 0x0a, 0xa5, 0xce, 0xdd,
  };
  constexpr uint32_t tweak_128 = 3022320897;
  constexpr std::array<uint8_t, 240> expected_128{
      0x4d, 0x55, 0xb8, 0xff, 0xf6, 0x30, 0xab, 0xa9, 0x72, 0xbb, 0x82, 0xa6, 0xd3, 0x15, 0xab,
      0xd1, 0xbf, 0xce, 0x2f, 0x8a, 0x34, 0x2b, 0x3d, 0x4d, 0xdd, 0x92, 0x8a, 0xc0, 0x39, 0xa8,
      0xdf, 0x5c, 0xc9, 0x56, 0x1d, 0x02, 0x3b, 0xbd, 0xbf, 0x16, 0x9f, 0x5d, 0xd4, 0x72, 0xe9,
      0xaa, 0x6d, 0x3e, 0x71, 0x8b, 0x8a, 0x46, 0x25, 0x6b, 0xde, 0xe1, 0x55, 0xb9, 0xbe, 0x02,
      0xa7, 0x47, 0x12, 0xa4, 0x3c, 0xd9, 0x55, 0x29, 0xa0, 0xcf, 0x6d, 0x37, 0xbc, 0xd9, 0x6c,
      0xa0, 0x70, 0x5f, 0x67, 0x33, 0x90, 0x83, 0xc3, 0xa6, 0xc5, 0x62, 0xe4, 0x23, 0x0f, 0x61,
      0x6e, 0x8e, 0x75, 0xcc, 0xc1, 0xa6, 0x79, 0xd4, 0x6f, 0xf0, 0x57, 0x33, 0xa8, 0x71, 0xf8,
      0x91, 0x57, 0x6f, 0xf6, 0xda, 0xdd, 0xc2, 0x25, 0x44, 0xa9, 0x7a, 0x46, 0x6c, 0x80, 0x59,
      0x6e, 0x23, 0x9a, 0xb8, 0xc9, 0x3d, 0x9f, 0xfd, 0x16, 0x32, 0xb7, 0x6c, 0x29, 0xb1, 0xd9,
      0xe9, 0x20, 0xe0, 0x0b, 0xa9, 0x27, 0x56, 0x0d, 0x72, 0x5c, 0xfb, 0xfd, 0x78, 0xfc, 0x04,
      0x6d, 0xdd, 0x0e, 0xa2, 0x9e, 0x9c, 0x2d, 0x59, 0xb9, 0xfc, 0x08, 0xf0, 0x80, 0x30, 0x8f,
      0x8d, 0x28, 0xa1, 0x77, 0x38, 0x3a, 0xfb, 0x7e, 0xc1, 0x04, 0xe7, 0x85, 0x6f, 0x32, 0x04,
      0xbb, 0x8b, 0x33, 0xf8, 0x19, 0x02, 0x60, 0x19, 0x5c, 0x6b, 0x61, 0x71, 0xe0, 0x16, 0x17,
      0x3b, 0xaf, 0x69, 0x0a, 0xd4, 0xd9, 0xd6, 0x0e, 0xbd, 0x5f, 0x24, 0xbc, 0x69, 0xdd, 0x47,
      0x97, 0x1c, 0xa9, 0xe3, 0x91, 0x3f, 0x43, 0x13, 0x52, 0x62, 0x4a, 0x21, 0x1e, 0x7d, 0xcd,
      0x48, 0x18, 0xa8, 0x7e, 0xc3, 0x52, 0x6c, 0x56, 0x94, 0xd4, 0xea, 0x7c, 0x7a, 0x3d, 0xd7,
  };
  constexpr std::array<uint8_t, 24> key_192{
      0x94, 0x5d, 0x4c, 0x29, 0xca, 0x5b, 0x25, 0x2f, 0xe1, 0xde, 0xc7, 0xb2,
      0x68, 0x6d, 0xf9, 0xa7, 0x25, 0xab, 0x91, 0x32, 0xac, 0x0d, 0x4e, 0x48,
  };
  constexpr std::array<uint8_t, 16> iv_192{
      0x5e, 0x18, 0x8c, 0x80, 0x53, 0x3e, 0xc1, 0x2b,
      0xbe, 0x1d, 0x03, 0xc7, 0x76, 0x08, 0x5e, 0x73,
  };
  constexpr uint32_t tweak_192 = 3829270970;
  constexpr std::array<uint8_t, 240> expected_192{
      0x67, 0xa4, 0x37, 0xc9, 0x88, 0x45, 0x55, 0xf4, 0x5f, 0x06, 0xba, 0xf7, 0x96, 0x8f, 0x31,
      0xda, 0xf8, 0x86, 0x57, 0xd0, 0xc2, 0xe3, 0xe7, 0x7e, 0xff, 0x18, 0x10, 0x9b, 0x13, 0x5f,
      0x94, 0x2e, 0x95, 0xd7, 0xc8, 0xd1, 0xe2, 0x18, 0x3a, 0xd8, 0x4d, 0x2f, 0x2c, 0x0d, 0x2e,
      0x4c, 0x79, 0xdc, 0x6d, 0x8f, 0xff, 0xb0, 0x9c, 0xa9, 0x1d, 0xea, 0x7f, 0x26, 0x6a, 0x66,
      0xd2, 0x83, 0x64, 0x2d, 0xe6, 0xa5, 0xf3, 0x13, 0x5d, 0x19, 0x60, 0x38, 0xe1, 0x40, 0x5b,
      0xb6, 0xb9, 0x64, 0xbf, 0x68, 0xa7, 0x54, 0x41, 0x06, 0x3b, 0xdc, 0x53, 0xd2, 0x77, 0x3a,
      0xf9, 0x2b, 0x77, 0x4d, 0xcd, 0xf7, 0x8f, 0xbd, 0x7d, 0x20, 0xa9, 0x3c, 0x0d, 0x55, 0x2c,
      0x4a, 0x2a, 0x1a, 0x36, 0x04, 0xe2, 0x67, 0x22, 0xc2, 0x1d, 0x47, 0x20, 0x77, 0xf0, 0x20,
      0x67, 0xd5, 0x93, 0x23, 0x05, 0xcf, 0x2f, 0x70, 0x48, 0x94, 0xc9, 0xe1, 0x27, 0xb2, 0xd3,
      0x58, 0x1b, 0xae, 0xe9, 0x3e, 0x54, 0xb5, 0x1d, 0x89, 0x0f, 0xb9, 0x18, 0x3c, 0x2f, 0xa5,
      0x49, 0x44, 0xca, 0x3c, 0x92, 0xd0, 0x72, 0x72, 0x49, 0xe3, 0x7d, 0xd6, 0x08, 0x8f, 0x54,
      0x3d, 0xd1, 0x5e, 0x7f, 0xcc, 0xeb, 0xaa, 0x31, 0x23, 0x35, 0x43, 0xf6, 0x42, 0xeb, 0xea,
      0xde, 0x0d, 0x92, 0xd3, 0x76, 0xfd, 0x3d, 0x49, 0x92, 0xdd, 0x9f, 0x5b, 0x6d, 0xf2, 0xc1,
      0x03, 0xf5, 0x5b, 0x63, 0xd6, 0x47, 0x30, 0x99, 0x4b, 0xc5, 0x26, 0x3c, 0x1f, 0x35, 0x59,
      0xd6, 0x56, 0x73, 0x40, 0xa6, 0x19, 0x30, 0xee, 0xc0, 0x06, 0xdd, 0xa3, 0xb0, 0x95, 0xa3,
      0xb0, 0x14, 0xbc, 0x70, 0x3b, 0x10, 0x68, 0x95, 0x06, 0x06, 0xca, 0x60, 0x75, 0xb9, 0x01,
  };
  constexpr std::array<uint8_t, 32> key_256{
      0x93, 0xe9, 0x27, 0x4a, 0xf3, 0x3f, 0x34, 0x8a, 0xe0, 0xca, 0x2c,
      0x2d, 0x18, 0x47, 0xaf, 0x21, 0xbd, 0x91, 0x25, 0x32, 0xef, 0xbe,
      0x92, 0x15, 0xaf, 0xa0, 0x79, 0xcf, 0x48, 0x85, 0xb4, 0x3e,
  };
  constexpr std::array<uint8_t, 16> iv_256{
      0xb7, 0x32, 0x6f, 0x38, 0xf9, 0x75, 0x17, 0x84,
      0xd6, 0x4c, 0x3a, 0xd5, 0xf4, 0x0b, 0xdb, 0xec,
  };
  constexpr uint32_t tweak_256 = 1698216512;
  constexpr std::array<uint8_t, 240> expected_256{
      0x5a, 0x55, 0xa5, 0x76, 0x3d, 0x82, 0xaf, 0xae, 0x31, 0x71, 0x94, 0xc8, 0x16, 0xa3, 0xc7,
      0xce, 0x15, 0x77, 0xf1, 0x5a, 0x79, 0xc5, 0xaa, 0x74, 0x78, 0xe7, 0x9a, 0x86, 0x7c, 0xa1,
      0xd8, 0x11, 0x22, 0xcd, 0x64, 0xaf, 0x0a, 0xb2, 0x57, 0x48, 0xc9, 0x92, 0xe1, 0x10, 0x19,
      0x2c, 0xab, 0x9c, 0x2b, 0xea, 0xef, 0x82, 0x18, 0x49, 0x31, 0x6f, 0x84, 0x2f, 0xa1, 0x9c,
      0x31, 0x09, 0xc6, 0xbe, 0xe2, 0x01, 0xea, 0x57, 0x5b, 0x5a, 0x98, 0x48, 0xc5, 0x90, 0x55,
      0xd4, 0xd3, 0x2b, 0x09, 0xdb, 0x63, 0x5a, 0xc2, 0xa3, 0x6d, 0xdd, 0xfd, 0x5f, 0xaa, 0xfa,
      0xf3, 0x96, 0x9a, 0x04, 0xe2, 0xd3, 0x8e, 0x7e, 0xc6, 0xd6, 0x46, 0xd3, 0xa7, 0x36, 0xe6,
      0xa6, 0x49, 0x21, 0x9a, 0x9d, 0xd1, 0x25, 0xff, 0x66, 0x8d, 0xf6, 0xbf, 0xa9, 0x52, 0x26,
      0x9e, 0x6e, 0xd9, 0x3c, 0xc4, 0x5f, 0x65, 0x63, 0x4f, 0x1b, 0xf1, 0xf6, 0x5b, 0xb2, 0xde,
      0x56, 0x11, 0x15, 0xa0, 0x14, 0x52, 0x11, 0x1a, 0x8a, 0x12, 0xfa, 0xd0, 0xb2, 0x3f, 0x8e,
      0xc0, 0x2a, 0x56, 0x13, 0xe4, 0x0e, 0xcd, 0x1e, 0xbb, 0x80, 0x35, 0xce, 0x78, 0x4c, 0xf8,
      0x3f, 0x67, 0x47, 0x8a, 0x32, 0x02, 0x7d, 0x56, 0x05, 0xc2, 0xfd, 0x35, 0xf8, 0xc8, 0x6e,
      0xa3, 0x12, 0xf7, 0x29, 0x28, 0xaf, 0xb8, 0x55, 0xb9, 0xfd, 0xe7, 0x3a, 0x57, 0xf9, 0x07,
      0x3b, 0xf4, 0x28, 0xcf, 0x8d, 0xb4, 0xa7, 0x36, 0x8d, 0xd6, 0x0a, 0xd8, 0x6a, 0x37, 0x0e,
      0x3c, 0x38, 0x84, 0xe1, 0x8e, 0xb5, 0x17, 0xe3, 0xcf, 0xe1, 0x28, 0xfe, 0x0f, 0x7b, 0x43,
      0xcc, 0x85, 0x91, 0x04, 0x18, 0x6a, 0x1f, 0x28, 0xc4, 0x8a, 0x33, 0xe4, 0x49, 0x74, 0x1e,
  };
} // namespace prg_tvs

#endif
